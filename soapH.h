/* soapH.h
   Generated by gSOAP 2.8.122 for operations.h

gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void * SOAP_FMAC4 soap_getelement(struct soap*, const char*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void * SOAP_FMAC4 soap_dupelement(struct soap*, const void*, int);
SOAP_FMAC3 void SOAP_FMAC4 soap_delelement(const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

#ifndef SOAP_TYPE_byte_DEFINED
#define SOAP_TYPE_byte_DEFINED

#ifdef SOAP_DEFAULT_byte
#define soap_default_byte(soap, a) (*(a) = SOAP_DEFAULT_byte)
#else
#define soap_default_byte(soap, a) (*(a) = (char)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 char * SOAP_FMAC4 soap_new_byte(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_byte
#define soap_PUT_byte(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_byte
#define soap_PATCH_byte(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_byte
#define soap_POST_send_byte(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_byte
#define soap_GET_byte(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_byte(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_byte
#define soap_POST_recv_byte(soap, data) ( soap_read_byte(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_int_DEFINED
#define SOAP_TYPE_int_DEFINED

#ifdef SOAP_DEFAULT_int
#define soap_default_int(soap, a) (*(a) = SOAP_DEFAULT_int)
#else
#define soap_default_int(soap, a) (*(a) = (int)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int * SOAP_FMAC4 soap_new_int(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_int(soap, data, "int", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_int
#define soap_PUT_int(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_int
#define soap_PATCH_int(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_int
#define soap_POST_send_int(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_int
#define soap_GET_int(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_int(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_int
#define soap_POST_recv_int(soap, data) ( soap_read_int(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault_DEFINED
#define SOAP_TYPE_SOAP_ENV__Fault_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_new_SOAP_ENV__Fault(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Fault
#define soap_PUT_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Fault
#define soap_PATCH_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Fault
#define soap_POST_send_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Fault(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Fault
#define soap_GET_SOAP_ENV__Fault(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Fault(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Fault
#define soap_POST_recv_SOAP_ENV__Fault(soap, data) ( soap_read_SOAP_ENV__Fault(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_SOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_new_SOAP_ENV__Reason(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Reason
#define soap_PUT_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Reason
#define soap_PATCH_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Reason
#define soap_POST_send_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Reason(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Reason
#define soap_GET_SOAP_ENV__Reason(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Reason(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Reason
#define soap_POST_recv_SOAP_ENV__Reason(soap, data) ( soap_read_SOAP_ENV__Reason(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_SOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_new_SOAP_ENV__Detail(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Detail
#define soap_PUT_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Detail
#define soap_PATCH_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Detail
#define soap_POST_send_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Detail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Detail
#define soap_GET_SOAP_ENV__Detail(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Detail(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Detail
#define soap_POST_recv_SOAP_ENV__Detail(soap, data) ( soap_read_SOAP_ENV__Detail(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code_DEFINED
#define SOAP_TYPE_SOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_new_SOAP_ENV__Code(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Code
#define soap_PUT_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Code
#define soap_PATCH_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Code
#define soap_POST_send_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Code(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Code
#define soap_GET_SOAP_ENV__Code(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Code(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Code
#define soap_POST_recv_SOAP_ENV__Code(soap, data) ( soap_read_SOAP_ENV__Code(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header_DEFINED
#define SOAP_TYPE_SOAP_ENV__Header_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_new_SOAP_ENV__Header(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Header
#define soap_PUT_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Header
#define soap_PATCH_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Header
#define soap_POST_send_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Header(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Header
#define soap_GET_SOAP_ENV__Header(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Header(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Header
#define soap_POST_recv_SOAP_ENV__Header(soap, data) ( soap_read_SOAP_ENV__Header(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef SOAP_TYPE___ns1__totalServFilesSize_DEFINED
#define SOAP_TYPE___ns1__totalServFilesSize_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__totalServFilesSize(struct soap*, struct __ns1__totalServFilesSize *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__totalServFilesSize(struct soap*, const struct __ns1__totalServFilesSize *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__totalServFilesSize(struct soap*, const char*, int, const struct __ns1__totalServFilesSize *, const char*);
SOAP_FMAC3 struct __ns1__totalServFilesSize * SOAP_FMAC4 soap_in___ns1__totalServFilesSize(struct soap*, const char*, struct __ns1__totalServFilesSize *, const char*);

SOAP_FMAC3 struct __ns1__totalServFilesSize * SOAP_FMAC4 soap_new___ns1__totalServFilesSize(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__totalServFilesSize(struct soap*, const struct __ns1__totalServFilesSize *, const char*, const char*);

#ifndef soap_write___ns1__totalServFilesSize
#define soap_write___ns1__totalServFilesSize(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__totalServFilesSize(soap, data), 0) || soap_put___ns1__totalServFilesSize(soap, data, "-ns1:totalServFilesSize", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___ns1__totalServFilesSize
#define soap_PUT___ns1__totalServFilesSize(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__totalServFilesSize(soap, data), 0) || soap_put___ns1__totalServFilesSize(soap, data, "-ns1:totalServFilesSize", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___ns1__totalServFilesSize
#define soap_PATCH___ns1__totalServFilesSize(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__totalServFilesSize(soap, data), 0) || soap_put___ns1__totalServFilesSize(soap, data, "-ns1:totalServFilesSize", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___ns1__totalServFilesSize
#define soap_POST_send___ns1__totalServFilesSize(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__totalServFilesSize(soap, data), 0) || soap_put___ns1__totalServFilesSize(soap, data, "-ns1:totalServFilesSize", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__totalServFilesSize * SOAP_FMAC4 soap_get___ns1__totalServFilesSize(struct soap*, struct __ns1__totalServFilesSize *, const char*, const char*);

#ifndef soap_read___ns1__totalServFilesSize
#define soap_read___ns1__totalServFilesSize(soap, data) ( ((data) ? (soap_default___ns1__totalServFilesSize(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__totalServFilesSize(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___ns1__totalServFilesSize
#define soap_GET___ns1__totalServFilesSize(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___ns1__totalServFilesSize(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___ns1__totalServFilesSize
#define soap_POST_recv___ns1__totalServFilesSize(soap, data) ( soap_read___ns1__totalServFilesSize(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__filesStatistics_DEFINED
#define SOAP_TYPE___ns1__filesStatistics_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__filesStatistics(struct soap*, struct __ns1__filesStatistics *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__filesStatistics(struct soap*, const struct __ns1__filesStatistics *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__filesStatistics(struct soap*, const char*, int, const struct __ns1__filesStatistics *, const char*);
SOAP_FMAC3 struct __ns1__filesStatistics * SOAP_FMAC4 soap_in___ns1__filesStatistics(struct soap*, const char*, struct __ns1__filesStatistics *, const char*);

SOAP_FMAC3 struct __ns1__filesStatistics * SOAP_FMAC4 soap_new___ns1__filesStatistics(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__filesStatistics(struct soap*, const struct __ns1__filesStatistics *, const char*, const char*);

#ifndef soap_write___ns1__filesStatistics
#define soap_write___ns1__filesStatistics(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__filesStatistics(soap, data), 0) || soap_put___ns1__filesStatistics(soap, data, "-ns1:filesStatistics", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___ns1__filesStatistics
#define soap_PUT___ns1__filesStatistics(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__filesStatistics(soap, data), 0) || soap_put___ns1__filesStatistics(soap, data, "-ns1:filesStatistics", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___ns1__filesStatistics
#define soap_PATCH___ns1__filesStatistics(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__filesStatistics(soap, data), 0) || soap_put___ns1__filesStatistics(soap, data, "-ns1:filesStatistics", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___ns1__filesStatistics
#define soap_POST_send___ns1__filesStatistics(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__filesStatistics(soap, data), 0) || soap_put___ns1__filesStatistics(soap, data, "-ns1:filesStatistics", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__filesStatistics * SOAP_FMAC4 soap_get___ns1__filesStatistics(struct soap*, struct __ns1__filesStatistics *, const char*, const char*);

#ifndef soap_read___ns1__filesStatistics
#define soap_read___ns1__filesStatistics(soap, data) ( ((data) ? (soap_default___ns1__filesStatistics(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__filesStatistics(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___ns1__filesStatistics
#define soap_GET___ns1__filesStatistics(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___ns1__filesStatistics(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___ns1__filesStatistics
#define soap_POST_recv___ns1__filesStatistics(soap, data) ( soap_read___ns1__filesStatistics(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__smallestServFile_DEFINED
#define SOAP_TYPE___ns1__smallestServFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__smallestServFile(struct soap*, struct __ns1__smallestServFile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__smallestServFile(struct soap*, const struct __ns1__smallestServFile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__smallestServFile(struct soap*, const char*, int, const struct __ns1__smallestServFile *, const char*);
SOAP_FMAC3 struct __ns1__smallestServFile * SOAP_FMAC4 soap_in___ns1__smallestServFile(struct soap*, const char*, struct __ns1__smallestServFile *, const char*);

SOAP_FMAC3 struct __ns1__smallestServFile * SOAP_FMAC4 soap_new___ns1__smallestServFile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__smallestServFile(struct soap*, const struct __ns1__smallestServFile *, const char*, const char*);

#ifndef soap_write___ns1__smallestServFile
#define soap_write___ns1__smallestServFile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__smallestServFile(soap, data), 0) || soap_put___ns1__smallestServFile(soap, data, "-ns1:smallestServFile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___ns1__smallestServFile
#define soap_PUT___ns1__smallestServFile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__smallestServFile(soap, data), 0) || soap_put___ns1__smallestServFile(soap, data, "-ns1:smallestServFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___ns1__smallestServFile
#define soap_PATCH___ns1__smallestServFile(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__smallestServFile(soap, data), 0) || soap_put___ns1__smallestServFile(soap, data, "-ns1:smallestServFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___ns1__smallestServFile
#define soap_POST_send___ns1__smallestServFile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__smallestServFile(soap, data), 0) || soap_put___ns1__smallestServFile(soap, data, "-ns1:smallestServFile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__smallestServFile * SOAP_FMAC4 soap_get___ns1__smallestServFile(struct soap*, struct __ns1__smallestServFile *, const char*, const char*);

#ifndef soap_read___ns1__smallestServFile
#define soap_read___ns1__smallestServFile(soap, data) ( ((data) ? (soap_default___ns1__smallestServFile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__smallestServFile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___ns1__smallestServFile
#define soap_GET___ns1__smallestServFile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___ns1__smallestServFile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___ns1__smallestServFile
#define soap_POST_recv___ns1__smallestServFile(soap, data) ( soap_read___ns1__smallestServFile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__largestServFile_DEFINED
#define SOAP_TYPE___ns1__largestServFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__largestServFile(struct soap*, struct __ns1__largestServFile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__largestServFile(struct soap*, const struct __ns1__largestServFile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__largestServFile(struct soap*, const char*, int, const struct __ns1__largestServFile *, const char*);
SOAP_FMAC3 struct __ns1__largestServFile * SOAP_FMAC4 soap_in___ns1__largestServFile(struct soap*, const char*, struct __ns1__largestServFile *, const char*);

SOAP_FMAC3 struct __ns1__largestServFile * SOAP_FMAC4 soap_new___ns1__largestServFile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__largestServFile(struct soap*, const struct __ns1__largestServFile *, const char*, const char*);

#ifndef soap_write___ns1__largestServFile
#define soap_write___ns1__largestServFile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__largestServFile(soap, data), 0) || soap_put___ns1__largestServFile(soap, data, "-ns1:largestServFile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___ns1__largestServFile
#define soap_PUT___ns1__largestServFile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__largestServFile(soap, data), 0) || soap_put___ns1__largestServFile(soap, data, "-ns1:largestServFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___ns1__largestServFile
#define soap_PATCH___ns1__largestServFile(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__largestServFile(soap, data), 0) || soap_put___ns1__largestServFile(soap, data, "-ns1:largestServFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___ns1__largestServFile
#define soap_POST_send___ns1__largestServFile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__largestServFile(soap, data), 0) || soap_put___ns1__largestServFile(soap, data, "-ns1:largestServFile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__largestServFile * SOAP_FMAC4 soap_get___ns1__largestServFile(struct soap*, struct __ns1__largestServFile *, const char*, const char*);

#ifndef soap_read___ns1__largestServFile
#define soap_read___ns1__largestServFile(soap, data) ( ((data) ? (soap_default___ns1__largestServFile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__largestServFile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___ns1__largestServFile
#define soap_GET___ns1__largestServFile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___ns1__largestServFile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___ns1__largestServFile
#define soap_POST_recv___ns1__largestServFile(soap, data) ( soap_read___ns1__largestServFile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__filesInCertainProgLanguage_DEFINED
#define SOAP_TYPE___ns1__filesInCertainProgLanguage_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__filesInCertainProgLanguage(struct soap*, struct __ns1__filesInCertainProgLanguage *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__filesInCertainProgLanguage(struct soap*, const struct __ns1__filesInCertainProgLanguage *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__filesInCertainProgLanguage(struct soap*, const char*, int, const struct __ns1__filesInCertainProgLanguage *, const char*);
SOAP_FMAC3 struct __ns1__filesInCertainProgLanguage * SOAP_FMAC4 soap_in___ns1__filesInCertainProgLanguage(struct soap*, const char*, struct __ns1__filesInCertainProgLanguage *, const char*);

SOAP_FMAC3 struct __ns1__filesInCertainProgLanguage * SOAP_FMAC4 soap_new___ns1__filesInCertainProgLanguage(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__filesInCertainProgLanguage(struct soap*, const struct __ns1__filesInCertainProgLanguage *, const char*, const char*);

#ifndef soap_write___ns1__filesInCertainProgLanguage
#define soap_write___ns1__filesInCertainProgLanguage(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__filesInCertainProgLanguage(soap, data), 0) || soap_put___ns1__filesInCertainProgLanguage(soap, data, "-ns1:filesInCertainProgLanguage", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___ns1__filesInCertainProgLanguage
#define soap_PUT___ns1__filesInCertainProgLanguage(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__filesInCertainProgLanguage(soap, data), 0) || soap_put___ns1__filesInCertainProgLanguage(soap, data, "-ns1:filesInCertainProgLanguage", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___ns1__filesInCertainProgLanguage
#define soap_PATCH___ns1__filesInCertainProgLanguage(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__filesInCertainProgLanguage(soap, data), 0) || soap_put___ns1__filesInCertainProgLanguage(soap, data, "-ns1:filesInCertainProgLanguage", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___ns1__filesInCertainProgLanguage
#define soap_POST_send___ns1__filesInCertainProgLanguage(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__filesInCertainProgLanguage(soap, data), 0) || soap_put___ns1__filesInCertainProgLanguage(soap, data, "-ns1:filesInCertainProgLanguage", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__filesInCertainProgLanguage * SOAP_FMAC4 soap_get___ns1__filesInCertainProgLanguage(struct soap*, struct __ns1__filesInCertainProgLanguage *, const char*, const char*);

#ifndef soap_read___ns1__filesInCertainProgLanguage
#define soap_read___ns1__filesInCertainProgLanguage(soap, data) ( ((data) ? (soap_default___ns1__filesInCertainProgLanguage(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__filesInCertainProgLanguage(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___ns1__filesInCertainProgLanguage
#define soap_GET___ns1__filesInCertainProgLanguage(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___ns1__filesInCertainProgLanguage(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___ns1__filesInCertainProgLanguage
#define soap_POST_recv___ns1__filesInCertainProgLanguage(soap, data) ( soap_read___ns1__filesInCertainProgLanguage(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__servFiles_DEFINED
#define SOAP_TYPE___ns1__servFiles_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__servFiles(struct soap*, struct __ns1__servFiles *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__servFiles(struct soap*, const struct __ns1__servFiles *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__servFiles(struct soap*, const char*, int, const struct __ns1__servFiles *, const char*);
SOAP_FMAC3 struct __ns1__servFiles * SOAP_FMAC4 soap_in___ns1__servFiles(struct soap*, const char*, struct __ns1__servFiles *, const char*);

SOAP_FMAC3 struct __ns1__servFiles * SOAP_FMAC4 soap_new___ns1__servFiles(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__servFiles(struct soap*, const struct __ns1__servFiles *, const char*, const char*);

#ifndef soap_write___ns1__servFiles
#define soap_write___ns1__servFiles(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__servFiles(soap, data), 0) || soap_put___ns1__servFiles(soap, data, "-ns1:servFiles", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___ns1__servFiles
#define soap_PUT___ns1__servFiles(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__servFiles(soap, data), 0) || soap_put___ns1__servFiles(soap, data, "-ns1:servFiles", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___ns1__servFiles
#define soap_PATCH___ns1__servFiles(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__servFiles(soap, data), 0) || soap_put___ns1__servFiles(soap, data, "-ns1:servFiles", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___ns1__servFiles
#define soap_POST_send___ns1__servFiles(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__servFiles(soap, data), 0) || soap_put___ns1__servFiles(soap, data, "-ns1:servFiles", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__servFiles * SOAP_FMAC4 soap_get___ns1__servFiles(struct soap*, struct __ns1__servFiles *, const char*, const char*);

#ifndef soap_read___ns1__servFiles
#define soap_read___ns1__servFiles(soap, data) ( ((data) ? (soap_default___ns1__servFiles(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__servFiles(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___ns1__servFiles
#define soap_GET___ns1__servFiles(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___ns1__servFiles(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___ns1__servFiles
#define soap_POST_recv___ns1__servFiles(soap, data) ( soap_read___ns1__servFiles(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__clientLogFiles_DEFINED
#define SOAP_TYPE___ns1__clientLogFiles_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__clientLogFiles(struct soap*, struct __ns1__clientLogFiles *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__clientLogFiles(struct soap*, const struct __ns1__clientLogFiles *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__clientLogFiles(struct soap*, const char*, int, const struct __ns1__clientLogFiles *, const char*);
SOAP_FMAC3 struct __ns1__clientLogFiles * SOAP_FMAC4 soap_in___ns1__clientLogFiles(struct soap*, const char*, struct __ns1__clientLogFiles *, const char*);

SOAP_FMAC3 struct __ns1__clientLogFiles * SOAP_FMAC4 soap_new___ns1__clientLogFiles(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__clientLogFiles(struct soap*, const struct __ns1__clientLogFiles *, const char*, const char*);

#ifndef soap_write___ns1__clientLogFiles
#define soap_write___ns1__clientLogFiles(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__clientLogFiles(soap, data), 0) || soap_put___ns1__clientLogFiles(soap, data, "-ns1:clientLogFiles", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___ns1__clientLogFiles
#define soap_PUT___ns1__clientLogFiles(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__clientLogFiles(soap, data), 0) || soap_put___ns1__clientLogFiles(soap, data, "-ns1:clientLogFiles", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___ns1__clientLogFiles
#define soap_PATCH___ns1__clientLogFiles(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__clientLogFiles(soap, data), 0) || soap_put___ns1__clientLogFiles(soap, data, "-ns1:clientLogFiles", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___ns1__clientLogFiles
#define soap_POST_send___ns1__clientLogFiles(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__clientLogFiles(soap, data), 0) || soap_put___ns1__clientLogFiles(soap, data, "-ns1:clientLogFiles", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__clientLogFiles * SOAP_FMAC4 soap_get___ns1__clientLogFiles(struct soap*, struct __ns1__clientLogFiles *, const char*, const char*);

#ifndef soap_read___ns1__clientLogFiles
#define soap_read___ns1__clientLogFiles(soap, data) ( ((data) ? (soap_default___ns1__clientLogFiles(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__clientLogFiles(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___ns1__clientLogFiles
#define soap_GET___ns1__clientLogFiles(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___ns1__clientLogFiles(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___ns1__clientLogFiles
#define soap_POST_recv___ns1__clientLogFiles(soap, data) ( soap_read___ns1__clientLogFiles(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__removeFile_DEFINED
#define SOAP_TYPE___ns1__removeFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__removeFile(struct soap*, struct __ns1__removeFile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__removeFile(struct soap*, const struct __ns1__removeFile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__removeFile(struct soap*, const char*, int, const struct __ns1__removeFile *, const char*);
SOAP_FMAC3 struct __ns1__removeFile * SOAP_FMAC4 soap_in___ns1__removeFile(struct soap*, const char*, struct __ns1__removeFile *, const char*);

SOAP_FMAC3 struct __ns1__removeFile * SOAP_FMAC4 soap_new___ns1__removeFile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__removeFile(struct soap*, const struct __ns1__removeFile *, const char*, const char*);

#ifndef soap_write___ns1__removeFile
#define soap_write___ns1__removeFile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__removeFile(soap, data), 0) || soap_put___ns1__removeFile(soap, data, "-ns1:removeFile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___ns1__removeFile
#define soap_PUT___ns1__removeFile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__removeFile(soap, data), 0) || soap_put___ns1__removeFile(soap, data, "-ns1:removeFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___ns1__removeFile
#define soap_PATCH___ns1__removeFile(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__removeFile(soap, data), 0) || soap_put___ns1__removeFile(soap, data, "-ns1:removeFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___ns1__removeFile
#define soap_POST_send___ns1__removeFile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__removeFile(soap, data), 0) || soap_put___ns1__removeFile(soap, data, "-ns1:removeFile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__removeFile * SOAP_FMAC4 soap_get___ns1__removeFile(struct soap*, struct __ns1__removeFile *, const char*, const char*);

#ifndef soap_read___ns1__removeFile
#define soap_read___ns1__removeFile(soap, data) ( ((data) ? (soap_default___ns1__removeFile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__removeFile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___ns1__removeFile
#define soap_GET___ns1__removeFile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___ns1__removeFile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___ns1__removeFile
#define soap_POST_recv___ns1__removeFile(soap, data) ( soap_read___ns1__removeFile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__modifyFile_DEFINED
#define SOAP_TYPE___ns1__modifyFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__modifyFile(struct soap*, struct __ns1__modifyFile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__modifyFile(struct soap*, const struct __ns1__modifyFile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__modifyFile(struct soap*, const char*, int, const struct __ns1__modifyFile *, const char*);
SOAP_FMAC3 struct __ns1__modifyFile * SOAP_FMAC4 soap_in___ns1__modifyFile(struct soap*, const char*, struct __ns1__modifyFile *, const char*);

SOAP_FMAC3 struct __ns1__modifyFile * SOAP_FMAC4 soap_new___ns1__modifyFile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__modifyFile(struct soap*, const struct __ns1__modifyFile *, const char*, const char*);

#ifndef soap_write___ns1__modifyFile
#define soap_write___ns1__modifyFile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__modifyFile(soap, data), 0) || soap_put___ns1__modifyFile(soap, data, "-ns1:modifyFile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___ns1__modifyFile
#define soap_PUT___ns1__modifyFile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__modifyFile(soap, data), 0) || soap_put___ns1__modifyFile(soap, data, "-ns1:modifyFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___ns1__modifyFile
#define soap_PATCH___ns1__modifyFile(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__modifyFile(soap, data), 0) || soap_put___ns1__modifyFile(soap, data, "-ns1:modifyFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___ns1__modifyFile
#define soap_POST_send___ns1__modifyFile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__modifyFile(soap, data), 0) || soap_put___ns1__modifyFile(soap, data, "-ns1:modifyFile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__modifyFile * SOAP_FMAC4 soap_get___ns1__modifyFile(struct soap*, struct __ns1__modifyFile *, const char*, const char*);

#ifndef soap_read___ns1__modifyFile
#define soap_read___ns1__modifyFile(soap, data) ( ((data) ? (soap_default___ns1__modifyFile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__modifyFile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___ns1__modifyFile
#define soap_GET___ns1__modifyFile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___ns1__modifyFile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___ns1__modifyFile
#define soap_POST_recv___ns1__modifyFile(soap, data) ( soap_read___ns1__modifyFile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__createFile_DEFINED
#define SOAP_TYPE___ns1__createFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__createFile(struct soap*, struct __ns1__createFile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__createFile(struct soap*, const struct __ns1__createFile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__createFile(struct soap*, const char*, int, const struct __ns1__createFile *, const char*);
SOAP_FMAC3 struct __ns1__createFile * SOAP_FMAC4 soap_in___ns1__createFile(struct soap*, const char*, struct __ns1__createFile *, const char*);

SOAP_FMAC3 struct __ns1__createFile * SOAP_FMAC4 soap_new___ns1__createFile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__createFile(struct soap*, const struct __ns1__createFile *, const char*, const char*);

#ifndef soap_write___ns1__createFile
#define soap_write___ns1__createFile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__createFile(soap, data), 0) || soap_put___ns1__createFile(soap, data, "-ns1:createFile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___ns1__createFile
#define soap_PUT___ns1__createFile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__createFile(soap, data), 0) || soap_put___ns1__createFile(soap, data, "-ns1:createFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___ns1__createFile
#define soap_PATCH___ns1__createFile(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__createFile(soap, data), 0) || soap_put___ns1__createFile(soap, data, "-ns1:createFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___ns1__createFile
#define soap_POST_send___ns1__createFile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__createFile(soap, data), 0) || soap_put___ns1__createFile(soap, data, "-ns1:createFile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__createFile * SOAP_FMAC4 soap_get___ns1__createFile(struct soap*, struct __ns1__createFile *, const char*, const char*);

#ifndef soap_read___ns1__createFile
#define soap_read___ns1__createFile(soap, data) ( ((data) ? (soap_default___ns1__createFile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__createFile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___ns1__createFile
#define soap_GET___ns1__createFile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___ns1__createFile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___ns1__createFile
#define soap_POST_recv___ns1__createFile(soap, data) ( soap_read___ns1__createFile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__storeFile_DEFINED
#define SOAP_TYPE___ns1__storeFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__storeFile(struct soap*, struct __ns1__storeFile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__storeFile(struct soap*, const struct __ns1__storeFile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__storeFile(struct soap*, const char*, int, const struct __ns1__storeFile *, const char*);
SOAP_FMAC3 struct __ns1__storeFile * SOAP_FMAC4 soap_in___ns1__storeFile(struct soap*, const char*, struct __ns1__storeFile *, const char*);

SOAP_FMAC3 struct __ns1__storeFile * SOAP_FMAC4 soap_new___ns1__storeFile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__storeFile(struct soap*, const struct __ns1__storeFile *, const char*, const char*);

#ifndef soap_write___ns1__storeFile
#define soap_write___ns1__storeFile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__storeFile(soap, data), 0) || soap_put___ns1__storeFile(soap, data, "-ns1:storeFile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___ns1__storeFile
#define soap_PUT___ns1__storeFile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__storeFile(soap, data), 0) || soap_put___ns1__storeFile(soap, data, "-ns1:storeFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___ns1__storeFile
#define soap_PATCH___ns1__storeFile(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__storeFile(soap, data), 0) || soap_put___ns1__storeFile(soap, data, "-ns1:storeFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___ns1__storeFile
#define soap_POST_send___ns1__storeFile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___ns1__storeFile(soap, data), 0) || soap_put___ns1__storeFile(soap, data, "-ns1:storeFile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__storeFile * SOAP_FMAC4 soap_get___ns1__storeFile(struct soap*, struct __ns1__storeFile *, const char*, const char*);

#ifndef soap_read___ns1__storeFile
#define soap_read___ns1__storeFile(soap, data) ( ((data) ? (soap_default___ns1__storeFile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__storeFile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___ns1__storeFile
#define soap_GET___ns1__storeFile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___ns1__storeFile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___ns1__storeFile
#define soap_POST_recv___ns1__storeFile(soap, data) ( soap_read___ns1__storeFile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__totalServFilesSizeResponse1_DEFINED
#define SOAP_TYPE__ns1__totalServFilesSizeResponse1_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__totalServFilesSizeResponse1(struct soap*, struct _ns1__totalServFilesSizeResponse1 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__totalServFilesSizeResponse1(struct soap*, const struct _ns1__totalServFilesSizeResponse1 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__totalServFilesSizeResponse1(struct soap*, const char*, int, const struct _ns1__totalServFilesSizeResponse1 *, const char*);
SOAP_FMAC3 struct _ns1__totalServFilesSizeResponse1 * SOAP_FMAC4 soap_in__ns1__totalServFilesSizeResponse1(struct soap*, const char*, struct _ns1__totalServFilesSizeResponse1 *, const char*);

SOAP_FMAC3 struct _ns1__totalServFilesSizeResponse1 * SOAP_FMAC4 soap_new__ns1__totalServFilesSizeResponse1(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__totalServFilesSizeResponse1(struct soap*, const struct _ns1__totalServFilesSizeResponse1 *, const char*, const char*);

#ifndef soap_write__ns1__totalServFilesSizeResponse1
#define soap_write__ns1__totalServFilesSizeResponse1(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__totalServFilesSizeResponse1(soap, data), 0) || soap_put__ns1__totalServFilesSizeResponse1(soap, data, "ns1:totalServFilesSizeResponse1", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__totalServFilesSizeResponse1
#define soap_PUT__ns1__totalServFilesSizeResponse1(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__totalServFilesSizeResponse1(soap, data), 0) || soap_put__ns1__totalServFilesSizeResponse1(soap, data, "ns1:totalServFilesSizeResponse1", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__totalServFilesSizeResponse1
#define soap_PATCH__ns1__totalServFilesSizeResponse1(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__totalServFilesSizeResponse1(soap, data), 0) || soap_put__ns1__totalServFilesSizeResponse1(soap, data, "ns1:totalServFilesSizeResponse1", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__totalServFilesSizeResponse1
#define soap_POST_send__ns1__totalServFilesSizeResponse1(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__totalServFilesSizeResponse1(soap, data), 0) || soap_put__ns1__totalServFilesSizeResponse1(soap, data, "ns1:totalServFilesSizeResponse1", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__totalServFilesSizeResponse1 * SOAP_FMAC4 soap_get__ns1__totalServFilesSizeResponse1(struct soap*, struct _ns1__totalServFilesSizeResponse1 *, const char*, const char*);

#ifndef soap_read__ns1__totalServFilesSizeResponse1
#define soap_read__ns1__totalServFilesSizeResponse1(soap, data) ( ((data) ? (soap_default__ns1__totalServFilesSizeResponse1(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__totalServFilesSizeResponse1(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__totalServFilesSizeResponse1
#define soap_GET__ns1__totalServFilesSizeResponse1(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__totalServFilesSizeResponse1(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__totalServFilesSizeResponse1
#define soap_POST_recv__ns1__totalServFilesSizeResponse1(soap, data) ( soap_read__ns1__totalServFilesSizeResponse1(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__totalServFilesSize_DEFINED
#define SOAP_TYPE__ns1__totalServFilesSize_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__totalServFilesSize(struct soap*, struct _ns1__totalServFilesSize *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__totalServFilesSize(struct soap*, const struct _ns1__totalServFilesSize *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__totalServFilesSize(struct soap*, const char*, int, const struct _ns1__totalServFilesSize *, const char*);
SOAP_FMAC3 struct _ns1__totalServFilesSize * SOAP_FMAC4 soap_in__ns1__totalServFilesSize(struct soap*, const char*, struct _ns1__totalServFilesSize *, const char*);

SOAP_FMAC3 struct _ns1__totalServFilesSize * SOAP_FMAC4 soap_new__ns1__totalServFilesSize(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__totalServFilesSize(struct soap*, const struct _ns1__totalServFilesSize *, const char*, const char*);

#ifndef soap_write__ns1__totalServFilesSize
#define soap_write__ns1__totalServFilesSize(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__totalServFilesSize(soap, data), 0) || soap_put__ns1__totalServFilesSize(soap, data, "ns1:totalServFilesSize", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__totalServFilesSize
#define soap_PUT__ns1__totalServFilesSize(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__totalServFilesSize(soap, data), 0) || soap_put__ns1__totalServFilesSize(soap, data, "ns1:totalServFilesSize", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__totalServFilesSize
#define soap_PATCH__ns1__totalServFilesSize(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__totalServFilesSize(soap, data), 0) || soap_put__ns1__totalServFilesSize(soap, data, "ns1:totalServFilesSize", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__totalServFilesSize
#define soap_POST_send__ns1__totalServFilesSize(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__totalServFilesSize(soap, data), 0) || soap_put__ns1__totalServFilesSize(soap, data, "ns1:totalServFilesSize", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__totalServFilesSize * SOAP_FMAC4 soap_get__ns1__totalServFilesSize(struct soap*, struct _ns1__totalServFilesSize *, const char*, const char*);

#ifndef soap_read__ns1__totalServFilesSize
#define soap_read__ns1__totalServFilesSize(soap, data) ( ((data) ? (soap_default__ns1__totalServFilesSize(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__totalServFilesSize(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__totalServFilesSize
#define soap_GET__ns1__totalServFilesSize(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__totalServFilesSize(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__totalServFilesSize
#define soap_POST_recv__ns1__totalServFilesSize(soap, data) ( soap_read__ns1__totalServFilesSize(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__filesStatisticsResponse1_DEFINED
#define SOAP_TYPE__ns1__filesStatisticsResponse1_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__filesStatisticsResponse1(struct soap*, struct _ns1__filesStatisticsResponse1 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__filesStatisticsResponse1(struct soap*, const struct _ns1__filesStatisticsResponse1 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__filesStatisticsResponse1(struct soap*, const char*, int, const struct _ns1__filesStatisticsResponse1 *, const char*);
SOAP_FMAC3 struct _ns1__filesStatisticsResponse1 * SOAP_FMAC4 soap_in__ns1__filesStatisticsResponse1(struct soap*, const char*, struct _ns1__filesStatisticsResponse1 *, const char*);

SOAP_FMAC3 struct _ns1__filesStatisticsResponse1 * SOAP_FMAC4 soap_new__ns1__filesStatisticsResponse1(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__filesStatisticsResponse1(struct soap*, const struct _ns1__filesStatisticsResponse1 *, const char*, const char*);

#ifndef soap_write__ns1__filesStatisticsResponse1
#define soap_write__ns1__filesStatisticsResponse1(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__filesStatisticsResponse1(soap, data), 0) || soap_put__ns1__filesStatisticsResponse1(soap, data, "ns1:filesStatisticsResponse1", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__filesStatisticsResponse1
#define soap_PUT__ns1__filesStatisticsResponse1(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__filesStatisticsResponse1(soap, data), 0) || soap_put__ns1__filesStatisticsResponse1(soap, data, "ns1:filesStatisticsResponse1", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__filesStatisticsResponse1
#define soap_PATCH__ns1__filesStatisticsResponse1(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__filesStatisticsResponse1(soap, data), 0) || soap_put__ns1__filesStatisticsResponse1(soap, data, "ns1:filesStatisticsResponse1", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__filesStatisticsResponse1
#define soap_POST_send__ns1__filesStatisticsResponse1(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__filesStatisticsResponse1(soap, data), 0) || soap_put__ns1__filesStatisticsResponse1(soap, data, "ns1:filesStatisticsResponse1", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__filesStatisticsResponse1 * SOAP_FMAC4 soap_get__ns1__filesStatisticsResponse1(struct soap*, struct _ns1__filesStatisticsResponse1 *, const char*, const char*);

#ifndef soap_read__ns1__filesStatisticsResponse1
#define soap_read__ns1__filesStatisticsResponse1(soap, data) ( ((data) ? (soap_default__ns1__filesStatisticsResponse1(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__filesStatisticsResponse1(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__filesStatisticsResponse1
#define soap_GET__ns1__filesStatisticsResponse1(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__filesStatisticsResponse1(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__filesStatisticsResponse1
#define soap_POST_recv__ns1__filesStatisticsResponse1(soap, data) ( soap_read__ns1__filesStatisticsResponse1(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__filesStatistics_DEFINED
#define SOAP_TYPE__ns1__filesStatistics_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__filesStatistics(struct soap*, struct _ns1__filesStatistics *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__filesStatistics(struct soap*, const struct _ns1__filesStatistics *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__filesStatistics(struct soap*, const char*, int, const struct _ns1__filesStatistics *, const char*);
SOAP_FMAC3 struct _ns1__filesStatistics * SOAP_FMAC4 soap_in__ns1__filesStatistics(struct soap*, const char*, struct _ns1__filesStatistics *, const char*);

SOAP_FMAC3 struct _ns1__filesStatistics * SOAP_FMAC4 soap_new__ns1__filesStatistics(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__filesStatistics(struct soap*, const struct _ns1__filesStatistics *, const char*, const char*);

#ifndef soap_write__ns1__filesStatistics
#define soap_write__ns1__filesStatistics(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__filesStatistics(soap, data), 0) || soap_put__ns1__filesStatistics(soap, data, "ns1:filesStatistics", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__filesStatistics
#define soap_PUT__ns1__filesStatistics(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__filesStatistics(soap, data), 0) || soap_put__ns1__filesStatistics(soap, data, "ns1:filesStatistics", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__filesStatistics
#define soap_PATCH__ns1__filesStatistics(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__filesStatistics(soap, data), 0) || soap_put__ns1__filesStatistics(soap, data, "ns1:filesStatistics", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__filesStatistics
#define soap_POST_send__ns1__filesStatistics(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__filesStatistics(soap, data), 0) || soap_put__ns1__filesStatistics(soap, data, "ns1:filesStatistics", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__filesStatistics * SOAP_FMAC4 soap_get__ns1__filesStatistics(struct soap*, struct _ns1__filesStatistics *, const char*, const char*);

#ifndef soap_read__ns1__filesStatistics
#define soap_read__ns1__filesStatistics(soap, data) ( ((data) ? (soap_default__ns1__filesStatistics(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__filesStatistics(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__filesStatistics
#define soap_GET__ns1__filesStatistics(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__filesStatistics(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__filesStatistics
#define soap_POST_recv__ns1__filesStatistics(soap, data) ( soap_read__ns1__filesStatistics(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__smallestServFileResponse1_DEFINED
#define SOAP_TYPE__ns1__smallestServFileResponse1_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__smallestServFileResponse1(struct soap*, struct _ns1__smallestServFileResponse1 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__smallestServFileResponse1(struct soap*, const struct _ns1__smallestServFileResponse1 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__smallestServFileResponse1(struct soap*, const char*, int, const struct _ns1__smallestServFileResponse1 *, const char*);
SOAP_FMAC3 struct _ns1__smallestServFileResponse1 * SOAP_FMAC4 soap_in__ns1__smallestServFileResponse1(struct soap*, const char*, struct _ns1__smallestServFileResponse1 *, const char*);

SOAP_FMAC3 struct _ns1__smallestServFileResponse1 * SOAP_FMAC4 soap_new__ns1__smallestServFileResponse1(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__smallestServFileResponse1(struct soap*, const struct _ns1__smallestServFileResponse1 *, const char*, const char*);

#ifndef soap_write__ns1__smallestServFileResponse1
#define soap_write__ns1__smallestServFileResponse1(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__smallestServFileResponse1(soap, data), 0) || soap_put__ns1__smallestServFileResponse1(soap, data, "ns1:smallestServFileResponse1", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__smallestServFileResponse1
#define soap_PUT__ns1__smallestServFileResponse1(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__smallestServFileResponse1(soap, data), 0) || soap_put__ns1__smallestServFileResponse1(soap, data, "ns1:smallestServFileResponse1", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__smallestServFileResponse1
#define soap_PATCH__ns1__smallestServFileResponse1(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__smallestServFileResponse1(soap, data), 0) || soap_put__ns1__smallestServFileResponse1(soap, data, "ns1:smallestServFileResponse1", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__smallestServFileResponse1
#define soap_POST_send__ns1__smallestServFileResponse1(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__smallestServFileResponse1(soap, data), 0) || soap_put__ns1__smallestServFileResponse1(soap, data, "ns1:smallestServFileResponse1", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__smallestServFileResponse1 * SOAP_FMAC4 soap_get__ns1__smallestServFileResponse1(struct soap*, struct _ns1__smallestServFileResponse1 *, const char*, const char*);

#ifndef soap_read__ns1__smallestServFileResponse1
#define soap_read__ns1__smallestServFileResponse1(soap, data) ( ((data) ? (soap_default__ns1__smallestServFileResponse1(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__smallestServFileResponse1(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__smallestServFileResponse1
#define soap_GET__ns1__smallestServFileResponse1(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__smallestServFileResponse1(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__smallestServFileResponse1
#define soap_POST_recv__ns1__smallestServFileResponse1(soap, data) ( soap_read__ns1__smallestServFileResponse1(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__smallestServFile_DEFINED
#define SOAP_TYPE__ns1__smallestServFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__smallestServFile(struct soap*, struct _ns1__smallestServFile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__smallestServFile(struct soap*, const struct _ns1__smallestServFile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__smallestServFile(struct soap*, const char*, int, const struct _ns1__smallestServFile *, const char*);
SOAP_FMAC3 struct _ns1__smallestServFile * SOAP_FMAC4 soap_in__ns1__smallestServFile(struct soap*, const char*, struct _ns1__smallestServFile *, const char*);

SOAP_FMAC3 struct _ns1__smallestServFile * SOAP_FMAC4 soap_new__ns1__smallestServFile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__smallestServFile(struct soap*, const struct _ns1__smallestServFile *, const char*, const char*);

#ifndef soap_write__ns1__smallestServFile
#define soap_write__ns1__smallestServFile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__smallestServFile(soap, data), 0) || soap_put__ns1__smallestServFile(soap, data, "ns1:smallestServFile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__smallestServFile
#define soap_PUT__ns1__smallestServFile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__smallestServFile(soap, data), 0) || soap_put__ns1__smallestServFile(soap, data, "ns1:smallestServFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__smallestServFile
#define soap_PATCH__ns1__smallestServFile(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__smallestServFile(soap, data), 0) || soap_put__ns1__smallestServFile(soap, data, "ns1:smallestServFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__smallestServFile
#define soap_POST_send__ns1__smallestServFile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__smallestServFile(soap, data), 0) || soap_put__ns1__smallestServFile(soap, data, "ns1:smallestServFile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__smallestServFile * SOAP_FMAC4 soap_get__ns1__smallestServFile(struct soap*, struct _ns1__smallestServFile *, const char*, const char*);

#ifndef soap_read__ns1__smallestServFile
#define soap_read__ns1__smallestServFile(soap, data) ( ((data) ? (soap_default__ns1__smallestServFile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__smallestServFile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__smallestServFile
#define soap_GET__ns1__smallestServFile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__smallestServFile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__smallestServFile
#define soap_POST_recv__ns1__smallestServFile(soap, data) ( soap_read__ns1__smallestServFile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__largestServFileResponse1_DEFINED
#define SOAP_TYPE__ns1__largestServFileResponse1_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__largestServFileResponse1(struct soap*, struct _ns1__largestServFileResponse1 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__largestServFileResponse1(struct soap*, const struct _ns1__largestServFileResponse1 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__largestServFileResponse1(struct soap*, const char*, int, const struct _ns1__largestServFileResponse1 *, const char*);
SOAP_FMAC3 struct _ns1__largestServFileResponse1 * SOAP_FMAC4 soap_in__ns1__largestServFileResponse1(struct soap*, const char*, struct _ns1__largestServFileResponse1 *, const char*);

SOAP_FMAC3 struct _ns1__largestServFileResponse1 * SOAP_FMAC4 soap_new__ns1__largestServFileResponse1(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__largestServFileResponse1(struct soap*, const struct _ns1__largestServFileResponse1 *, const char*, const char*);

#ifndef soap_write__ns1__largestServFileResponse1
#define soap_write__ns1__largestServFileResponse1(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__largestServFileResponse1(soap, data), 0) || soap_put__ns1__largestServFileResponse1(soap, data, "ns1:largestServFileResponse1", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__largestServFileResponse1
#define soap_PUT__ns1__largestServFileResponse1(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__largestServFileResponse1(soap, data), 0) || soap_put__ns1__largestServFileResponse1(soap, data, "ns1:largestServFileResponse1", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__largestServFileResponse1
#define soap_PATCH__ns1__largestServFileResponse1(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__largestServFileResponse1(soap, data), 0) || soap_put__ns1__largestServFileResponse1(soap, data, "ns1:largestServFileResponse1", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__largestServFileResponse1
#define soap_POST_send__ns1__largestServFileResponse1(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__largestServFileResponse1(soap, data), 0) || soap_put__ns1__largestServFileResponse1(soap, data, "ns1:largestServFileResponse1", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__largestServFileResponse1 * SOAP_FMAC4 soap_get__ns1__largestServFileResponse1(struct soap*, struct _ns1__largestServFileResponse1 *, const char*, const char*);

#ifndef soap_read__ns1__largestServFileResponse1
#define soap_read__ns1__largestServFileResponse1(soap, data) ( ((data) ? (soap_default__ns1__largestServFileResponse1(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__largestServFileResponse1(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__largestServFileResponse1
#define soap_GET__ns1__largestServFileResponse1(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__largestServFileResponse1(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__largestServFileResponse1
#define soap_POST_recv__ns1__largestServFileResponse1(soap, data) ( soap_read__ns1__largestServFileResponse1(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__largestServFile_DEFINED
#define SOAP_TYPE__ns1__largestServFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__largestServFile(struct soap*, struct _ns1__largestServFile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__largestServFile(struct soap*, const struct _ns1__largestServFile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__largestServFile(struct soap*, const char*, int, const struct _ns1__largestServFile *, const char*);
SOAP_FMAC3 struct _ns1__largestServFile * SOAP_FMAC4 soap_in__ns1__largestServFile(struct soap*, const char*, struct _ns1__largestServFile *, const char*);

SOAP_FMAC3 struct _ns1__largestServFile * SOAP_FMAC4 soap_new__ns1__largestServFile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__largestServFile(struct soap*, const struct _ns1__largestServFile *, const char*, const char*);

#ifndef soap_write__ns1__largestServFile
#define soap_write__ns1__largestServFile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__largestServFile(soap, data), 0) || soap_put__ns1__largestServFile(soap, data, "ns1:largestServFile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__largestServFile
#define soap_PUT__ns1__largestServFile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__largestServFile(soap, data), 0) || soap_put__ns1__largestServFile(soap, data, "ns1:largestServFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__largestServFile
#define soap_PATCH__ns1__largestServFile(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__largestServFile(soap, data), 0) || soap_put__ns1__largestServFile(soap, data, "ns1:largestServFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__largestServFile
#define soap_POST_send__ns1__largestServFile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__largestServFile(soap, data), 0) || soap_put__ns1__largestServFile(soap, data, "ns1:largestServFile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__largestServFile * SOAP_FMAC4 soap_get__ns1__largestServFile(struct soap*, struct _ns1__largestServFile *, const char*, const char*);

#ifndef soap_read__ns1__largestServFile
#define soap_read__ns1__largestServFile(soap, data) ( ((data) ? (soap_default__ns1__largestServFile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__largestServFile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__largestServFile
#define soap_GET__ns1__largestServFile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__largestServFile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__largestServFile
#define soap_POST_recv__ns1__largestServFile(soap, data) ( soap_read__ns1__largestServFile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__filesInCertainProgLanguageResponse1_DEFINED
#define SOAP_TYPE__ns1__filesInCertainProgLanguageResponse1_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__filesInCertainProgLanguageResponse1(struct soap*, struct _ns1__filesInCertainProgLanguageResponse1 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__filesInCertainProgLanguageResponse1(struct soap*, const struct _ns1__filesInCertainProgLanguageResponse1 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__filesInCertainProgLanguageResponse1(struct soap*, const char*, int, const struct _ns1__filesInCertainProgLanguageResponse1 *, const char*);
SOAP_FMAC3 struct _ns1__filesInCertainProgLanguageResponse1 * SOAP_FMAC4 soap_in__ns1__filesInCertainProgLanguageResponse1(struct soap*, const char*, struct _ns1__filesInCertainProgLanguageResponse1 *, const char*);

SOAP_FMAC3 struct _ns1__filesInCertainProgLanguageResponse1 * SOAP_FMAC4 soap_new__ns1__filesInCertainProgLanguageResponse1(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__filesInCertainProgLanguageResponse1(struct soap*, const struct _ns1__filesInCertainProgLanguageResponse1 *, const char*, const char*);

#ifndef soap_write__ns1__filesInCertainProgLanguageResponse1
#define soap_write__ns1__filesInCertainProgLanguageResponse1(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__filesInCertainProgLanguageResponse1(soap, data), 0) || soap_put__ns1__filesInCertainProgLanguageResponse1(soap, data, "ns1:filesInCertainProgLanguageResponse1", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__filesInCertainProgLanguageResponse1
#define soap_PUT__ns1__filesInCertainProgLanguageResponse1(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__filesInCertainProgLanguageResponse1(soap, data), 0) || soap_put__ns1__filesInCertainProgLanguageResponse1(soap, data, "ns1:filesInCertainProgLanguageResponse1", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__filesInCertainProgLanguageResponse1
#define soap_PATCH__ns1__filesInCertainProgLanguageResponse1(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__filesInCertainProgLanguageResponse1(soap, data), 0) || soap_put__ns1__filesInCertainProgLanguageResponse1(soap, data, "ns1:filesInCertainProgLanguageResponse1", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__filesInCertainProgLanguageResponse1
#define soap_POST_send__ns1__filesInCertainProgLanguageResponse1(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__filesInCertainProgLanguageResponse1(soap, data), 0) || soap_put__ns1__filesInCertainProgLanguageResponse1(soap, data, "ns1:filesInCertainProgLanguageResponse1", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__filesInCertainProgLanguageResponse1 * SOAP_FMAC4 soap_get__ns1__filesInCertainProgLanguageResponse1(struct soap*, struct _ns1__filesInCertainProgLanguageResponse1 *, const char*, const char*);

#ifndef soap_read__ns1__filesInCertainProgLanguageResponse1
#define soap_read__ns1__filesInCertainProgLanguageResponse1(soap, data) ( ((data) ? (soap_default__ns1__filesInCertainProgLanguageResponse1(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__filesInCertainProgLanguageResponse1(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__filesInCertainProgLanguageResponse1
#define soap_GET__ns1__filesInCertainProgLanguageResponse1(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__filesInCertainProgLanguageResponse1(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__filesInCertainProgLanguageResponse1
#define soap_POST_recv__ns1__filesInCertainProgLanguageResponse1(soap, data) ( soap_read__ns1__filesInCertainProgLanguageResponse1(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__filesInCertainProgLanguage_DEFINED
#define SOAP_TYPE__ns1__filesInCertainProgLanguage_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__filesInCertainProgLanguage(struct soap*, struct _ns1__filesInCertainProgLanguage *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__filesInCertainProgLanguage(struct soap*, const struct _ns1__filesInCertainProgLanguage *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__filesInCertainProgLanguage(struct soap*, const char*, int, const struct _ns1__filesInCertainProgLanguage *, const char*);
SOAP_FMAC3 struct _ns1__filesInCertainProgLanguage * SOAP_FMAC4 soap_in__ns1__filesInCertainProgLanguage(struct soap*, const char*, struct _ns1__filesInCertainProgLanguage *, const char*);

SOAP_FMAC3 struct _ns1__filesInCertainProgLanguage * SOAP_FMAC4 soap_new__ns1__filesInCertainProgLanguage(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__filesInCertainProgLanguage(struct soap*, const struct _ns1__filesInCertainProgLanguage *, const char*, const char*);

#ifndef soap_write__ns1__filesInCertainProgLanguage
#define soap_write__ns1__filesInCertainProgLanguage(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__filesInCertainProgLanguage(soap, data), 0) || soap_put__ns1__filesInCertainProgLanguage(soap, data, "ns1:filesInCertainProgLanguage", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__filesInCertainProgLanguage
#define soap_PUT__ns1__filesInCertainProgLanguage(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__filesInCertainProgLanguage(soap, data), 0) || soap_put__ns1__filesInCertainProgLanguage(soap, data, "ns1:filesInCertainProgLanguage", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__filesInCertainProgLanguage
#define soap_PATCH__ns1__filesInCertainProgLanguage(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__filesInCertainProgLanguage(soap, data), 0) || soap_put__ns1__filesInCertainProgLanguage(soap, data, "ns1:filesInCertainProgLanguage", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__filesInCertainProgLanguage
#define soap_POST_send__ns1__filesInCertainProgLanguage(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__filesInCertainProgLanguage(soap, data), 0) || soap_put__ns1__filesInCertainProgLanguage(soap, data, "ns1:filesInCertainProgLanguage", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__filesInCertainProgLanguage * SOAP_FMAC4 soap_get__ns1__filesInCertainProgLanguage(struct soap*, struct _ns1__filesInCertainProgLanguage *, const char*, const char*);

#ifndef soap_read__ns1__filesInCertainProgLanguage
#define soap_read__ns1__filesInCertainProgLanguage(soap, data) ( ((data) ? (soap_default__ns1__filesInCertainProgLanguage(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__filesInCertainProgLanguage(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__filesInCertainProgLanguage
#define soap_GET__ns1__filesInCertainProgLanguage(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__filesInCertainProgLanguage(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__filesInCertainProgLanguage
#define soap_POST_recv__ns1__filesInCertainProgLanguage(soap, data) ( soap_read__ns1__filesInCertainProgLanguage(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__servFilesResponse1_DEFINED
#define SOAP_TYPE__ns1__servFilesResponse1_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__servFilesResponse1(struct soap*, struct _ns1__servFilesResponse1 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__servFilesResponse1(struct soap*, const struct _ns1__servFilesResponse1 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__servFilesResponse1(struct soap*, const char*, int, const struct _ns1__servFilesResponse1 *, const char*);
SOAP_FMAC3 struct _ns1__servFilesResponse1 * SOAP_FMAC4 soap_in__ns1__servFilesResponse1(struct soap*, const char*, struct _ns1__servFilesResponse1 *, const char*);

SOAP_FMAC3 struct _ns1__servFilesResponse1 * SOAP_FMAC4 soap_new__ns1__servFilesResponse1(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__servFilesResponse1(struct soap*, const struct _ns1__servFilesResponse1 *, const char*, const char*);

#ifndef soap_write__ns1__servFilesResponse1
#define soap_write__ns1__servFilesResponse1(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__servFilesResponse1(soap, data), 0) || soap_put__ns1__servFilesResponse1(soap, data, "ns1:servFilesResponse1", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__servFilesResponse1
#define soap_PUT__ns1__servFilesResponse1(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__servFilesResponse1(soap, data), 0) || soap_put__ns1__servFilesResponse1(soap, data, "ns1:servFilesResponse1", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__servFilesResponse1
#define soap_PATCH__ns1__servFilesResponse1(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__servFilesResponse1(soap, data), 0) || soap_put__ns1__servFilesResponse1(soap, data, "ns1:servFilesResponse1", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__servFilesResponse1
#define soap_POST_send__ns1__servFilesResponse1(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__servFilesResponse1(soap, data), 0) || soap_put__ns1__servFilesResponse1(soap, data, "ns1:servFilesResponse1", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__servFilesResponse1 * SOAP_FMAC4 soap_get__ns1__servFilesResponse1(struct soap*, struct _ns1__servFilesResponse1 *, const char*, const char*);

#ifndef soap_read__ns1__servFilesResponse1
#define soap_read__ns1__servFilesResponse1(soap, data) ( ((data) ? (soap_default__ns1__servFilesResponse1(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__servFilesResponse1(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__servFilesResponse1
#define soap_GET__ns1__servFilesResponse1(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__servFilesResponse1(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__servFilesResponse1
#define soap_POST_recv__ns1__servFilesResponse1(soap, data) ( soap_read__ns1__servFilesResponse1(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__servFiles_DEFINED
#define SOAP_TYPE__ns1__servFiles_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__servFiles(struct soap*, struct _ns1__servFiles *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__servFiles(struct soap*, const struct _ns1__servFiles *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__servFiles(struct soap*, const char*, int, const struct _ns1__servFiles *, const char*);
SOAP_FMAC3 struct _ns1__servFiles * SOAP_FMAC4 soap_in__ns1__servFiles(struct soap*, const char*, struct _ns1__servFiles *, const char*);

SOAP_FMAC3 struct _ns1__servFiles * SOAP_FMAC4 soap_new__ns1__servFiles(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__servFiles(struct soap*, const struct _ns1__servFiles *, const char*, const char*);

#ifndef soap_write__ns1__servFiles
#define soap_write__ns1__servFiles(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__servFiles(soap, data), 0) || soap_put__ns1__servFiles(soap, data, "ns1:servFiles", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__servFiles
#define soap_PUT__ns1__servFiles(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__servFiles(soap, data), 0) || soap_put__ns1__servFiles(soap, data, "ns1:servFiles", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__servFiles
#define soap_PATCH__ns1__servFiles(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__servFiles(soap, data), 0) || soap_put__ns1__servFiles(soap, data, "ns1:servFiles", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__servFiles
#define soap_POST_send__ns1__servFiles(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__servFiles(soap, data), 0) || soap_put__ns1__servFiles(soap, data, "ns1:servFiles", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__servFiles * SOAP_FMAC4 soap_get__ns1__servFiles(struct soap*, struct _ns1__servFiles *, const char*, const char*);

#ifndef soap_read__ns1__servFiles
#define soap_read__ns1__servFiles(soap, data) ( ((data) ? (soap_default__ns1__servFiles(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__servFiles(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__servFiles
#define soap_GET__ns1__servFiles(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__servFiles(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__servFiles
#define soap_POST_recv__ns1__servFiles(soap, data) ( soap_read__ns1__servFiles(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__clientLogFilesResponse1_DEFINED
#define SOAP_TYPE__ns1__clientLogFilesResponse1_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__clientLogFilesResponse1(struct soap*, struct _ns1__clientLogFilesResponse1 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__clientLogFilesResponse1(struct soap*, const struct _ns1__clientLogFilesResponse1 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__clientLogFilesResponse1(struct soap*, const char*, int, const struct _ns1__clientLogFilesResponse1 *, const char*);
SOAP_FMAC3 struct _ns1__clientLogFilesResponse1 * SOAP_FMAC4 soap_in__ns1__clientLogFilesResponse1(struct soap*, const char*, struct _ns1__clientLogFilesResponse1 *, const char*);

SOAP_FMAC3 struct _ns1__clientLogFilesResponse1 * SOAP_FMAC4 soap_new__ns1__clientLogFilesResponse1(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__clientLogFilesResponse1(struct soap*, const struct _ns1__clientLogFilesResponse1 *, const char*, const char*);

#ifndef soap_write__ns1__clientLogFilesResponse1
#define soap_write__ns1__clientLogFilesResponse1(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__clientLogFilesResponse1(soap, data), 0) || soap_put__ns1__clientLogFilesResponse1(soap, data, "ns1:clientLogFilesResponse1", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__clientLogFilesResponse1
#define soap_PUT__ns1__clientLogFilesResponse1(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__clientLogFilesResponse1(soap, data), 0) || soap_put__ns1__clientLogFilesResponse1(soap, data, "ns1:clientLogFilesResponse1", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__clientLogFilesResponse1
#define soap_PATCH__ns1__clientLogFilesResponse1(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__clientLogFilesResponse1(soap, data), 0) || soap_put__ns1__clientLogFilesResponse1(soap, data, "ns1:clientLogFilesResponse1", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__clientLogFilesResponse1
#define soap_POST_send__ns1__clientLogFilesResponse1(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__clientLogFilesResponse1(soap, data), 0) || soap_put__ns1__clientLogFilesResponse1(soap, data, "ns1:clientLogFilesResponse1", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__clientLogFilesResponse1 * SOAP_FMAC4 soap_get__ns1__clientLogFilesResponse1(struct soap*, struct _ns1__clientLogFilesResponse1 *, const char*, const char*);

#ifndef soap_read__ns1__clientLogFilesResponse1
#define soap_read__ns1__clientLogFilesResponse1(soap, data) ( ((data) ? (soap_default__ns1__clientLogFilesResponse1(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__clientLogFilesResponse1(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__clientLogFilesResponse1
#define soap_GET__ns1__clientLogFilesResponse1(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__clientLogFilesResponse1(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__clientLogFilesResponse1
#define soap_POST_recv__ns1__clientLogFilesResponse1(soap, data) ( soap_read__ns1__clientLogFilesResponse1(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__NewOperationResponse_DEFINED
#define SOAP_TYPE__ns1__NewOperationResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__NewOperationResponse(struct soap*, struct _ns1__NewOperationResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__NewOperationResponse(struct soap*, const struct _ns1__NewOperationResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__NewOperationResponse(struct soap*, const char*, int, const struct _ns1__NewOperationResponse *, const char*);
SOAP_FMAC3 struct _ns1__NewOperationResponse * SOAP_FMAC4 soap_in__ns1__NewOperationResponse(struct soap*, const char*, struct _ns1__NewOperationResponse *, const char*);

SOAP_FMAC3 struct _ns1__NewOperationResponse * SOAP_FMAC4 soap_new__ns1__NewOperationResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__NewOperationResponse(struct soap*, const struct _ns1__NewOperationResponse *, const char*, const char*);

#ifndef soap_write__ns1__NewOperationResponse
#define soap_write__ns1__NewOperationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__NewOperationResponse(soap, data), 0) || soap_put__ns1__NewOperationResponse(soap, data, "ns1:NewOperationResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__NewOperationResponse
#define soap_PUT__ns1__NewOperationResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__NewOperationResponse(soap, data), 0) || soap_put__ns1__NewOperationResponse(soap, data, "ns1:NewOperationResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__NewOperationResponse
#define soap_PATCH__ns1__NewOperationResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__NewOperationResponse(soap, data), 0) || soap_put__ns1__NewOperationResponse(soap, data, "ns1:NewOperationResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__NewOperationResponse
#define soap_POST_send__ns1__NewOperationResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__NewOperationResponse(soap, data), 0) || soap_put__ns1__NewOperationResponse(soap, data, "ns1:NewOperationResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__NewOperationResponse * SOAP_FMAC4 soap_get__ns1__NewOperationResponse(struct soap*, struct _ns1__NewOperationResponse *, const char*, const char*);

#ifndef soap_read__ns1__NewOperationResponse
#define soap_read__ns1__NewOperationResponse(soap, data) ( ((data) ? (soap_default__ns1__NewOperationResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__NewOperationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__NewOperationResponse
#define soap_GET__ns1__NewOperationResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__NewOperationResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__NewOperationResponse
#define soap_POST_recv__ns1__NewOperationResponse(soap, data) ( soap_read__ns1__NewOperationResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__clientLogFiles_DEFINED
#define SOAP_TYPE__ns1__clientLogFiles_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__clientLogFiles(struct soap*, struct _ns1__clientLogFiles *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__clientLogFiles(struct soap*, const struct _ns1__clientLogFiles *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__clientLogFiles(struct soap*, const char*, int, const struct _ns1__clientLogFiles *, const char*);
SOAP_FMAC3 struct _ns1__clientLogFiles * SOAP_FMAC4 soap_in__ns1__clientLogFiles(struct soap*, const char*, struct _ns1__clientLogFiles *, const char*);

SOAP_FMAC3 struct _ns1__clientLogFiles * SOAP_FMAC4 soap_new__ns1__clientLogFiles(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__clientLogFiles(struct soap*, const struct _ns1__clientLogFiles *, const char*, const char*);

#ifndef soap_write__ns1__clientLogFiles
#define soap_write__ns1__clientLogFiles(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__clientLogFiles(soap, data), 0) || soap_put__ns1__clientLogFiles(soap, data, "ns1:clientLogFiles", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__clientLogFiles
#define soap_PUT__ns1__clientLogFiles(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__clientLogFiles(soap, data), 0) || soap_put__ns1__clientLogFiles(soap, data, "ns1:clientLogFiles", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__clientLogFiles
#define soap_PATCH__ns1__clientLogFiles(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__clientLogFiles(soap, data), 0) || soap_put__ns1__clientLogFiles(soap, data, "ns1:clientLogFiles", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__clientLogFiles
#define soap_POST_send__ns1__clientLogFiles(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__clientLogFiles(soap, data), 0) || soap_put__ns1__clientLogFiles(soap, data, "ns1:clientLogFiles", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__clientLogFiles * SOAP_FMAC4 soap_get__ns1__clientLogFiles(struct soap*, struct _ns1__clientLogFiles *, const char*, const char*);

#ifndef soap_read__ns1__clientLogFiles
#define soap_read__ns1__clientLogFiles(soap, data) ( ((data) ? (soap_default__ns1__clientLogFiles(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__clientLogFiles(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__clientLogFiles
#define soap_GET__ns1__clientLogFiles(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__clientLogFiles(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__clientLogFiles
#define soap_POST_recv__ns1__clientLogFiles(soap, data) ( soap_read__ns1__clientLogFiles(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__store_USCOREexec_USCOREfileResponse_DEFINED
#define SOAP_TYPE__ns1__store_USCOREexec_USCOREfileResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__store_USCOREexec_USCOREfileResponse(struct soap*, struct _ns1__store_USCOREexec_USCOREfileResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__store_USCOREexec_USCOREfileResponse(struct soap*, const struct _ns1__store_USCOREexec_USCOREfileResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__store_USCOREexec_USCOREfileResponse(struct soap*, const char*, int, const struct _ns1__store_USCOREexec_USCOREfileResponse *, const char*);
SOAP_FMAC3 struct _ns1__store_USCOREexec_USCOREfileResponse * SOAP_FMAC4 soap_in__ns1__store_USCOREexec_USCOREfileResponse(struct soap*, const char*, struct _ns1__store_USCOREexec_USCOREfileResponse *, const char*);

SOAP_FMAC3 struct _ns1__store_USCOREexec_USCOREfileResponse * SOAP_FMAC4 soap_new__ns1__store_USCOREexec_USCOREfileResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__store_USCOREexec_USCOREfileResponse(struct soap*, const struct _ns1__store_USCOREexec_USCOREfileResponse *, const char*, const char*);

#ifndef soap_write__ns1__store_USCOREexec_USCOREfileResponse
#define soap_write__ns1__store_USCOREexec_USCOREfileResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__store_USCOREexec_USCOREfileResponse(soap, data), 0) || soap_put__ns1__store_USCOREexec_USCOREfileResponse(soap, data, "ns1:store_exec_fileResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__store_USCOREexec_USCOREfileResponse
#define soap_PUT__ns1__store_USCOREexec_USCOREfileResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__store_USCOREexec_USCOREfileResponse(soap, data), 0) || soap_put__ns1__store_USCOREexec_USCOREfileResponse(soap, data, "ns1:store_exec_fileResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__store_USCOREexec_USCOREfileResponse
#define soap_PATCH__ns1__store_USCOREexec_USCOREfileResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__store_USCOREexec_USCOREfileResponse(soap, data), 0) || soap_put__ns1__store_USCOREexec_USCOREfileResponse(soap, data, "ns1:store_exec_fileResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__store_USCOREexec_USCOREfileResponse
#define soap_POST_send__ns1__store_USCOREexec_USCOREfileResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__store_USCOREexec_USCOREfileResponse(soap, data), 0) || soap_put__ns1__store_USCOREexec_USCOREfileResponse(soap, data, "ns1:store_exec_fileResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__store_USCOREexec_USCOREfileResponse * SOAP_FMAC4 soap_get__ns1__store_USCOREexec_USCOREfileResponse(struct soap*, struct _ns1__store_USCOREexec_USCOREfileResponse *, const char*, const char*);

#ifndef soap_read__ns1__store_USCOREexec_USCOREfileResponse
#define soap_read__ns1__store_USCOREexec_USCOREfileResponse(soap, data) ( ((data) ? (soap_default__ns1__store_USCOREexec_USCOREfileResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__store_USCOREexec_USCOREfileResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__store_USCOREexec_USCOREfileResponse
#define soap_GET__ns1__store_USCOREexec_USCOREfileResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__store_USCOREexec_USCOREfileResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__store_USCOREexec_USCOREfileResponse
#define soap_POST_recv__ns1__store_USCOREexec_USCOREfileResponse(soap, data) ( soap_read__ns1__store_USCOREexec_USCOREfileResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__store_USCOREexec_USCOREfile_DEFINED
#define SOAP_TYPE__ns1__store_USCOREexec_USCOREfile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__store_USCOREexec_USCOREfile(struct soap*, struct _ns1__store_USCOREexec_USCOREfile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__store_USCOREexec_USCOREfile(struct soap*, const struct _ns1__store_USCOREexec_USCOREfile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__store_USCOREexec_USCOREfile(struct soap*, const char*, int, const struct _ns1__store_USCOREexec_USCOREfile *, const char*);
SOAP_FMAC3 struct _ns1__store_USCOREexec_USCOREfile * SOAP_FMAC4 soap_in__ns1__store_USCOREexec_USCOREfile(struct soap*, const char*, struct _ns1__store_USCOREexec_USCOREfile *, const char*);

SOAP_FMAC3 struct _ns1__store_USCOREexec_USCOREfile * SOAP_FMAC4 soap_new__ns1__store_USCOREexec_USCOREfile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__store_USCOREexec_USCOREfile(struct soap*, const struct _ns1__store_USCOREexec_USCOREfile *, const char*, const char*);

#ifndef soap_write__ns1__store_USCOREexec_USCOREfile
#define soap_write__ns1__store_USCOREexec_USCOREfile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__store_USCOREexec_USCOREfile(soap, data), 0) || soap_put__ns1__store_USCOREexec_USCOREfile(soap, data, "ns1:store_exec_file", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__store_USCOREexec_USCOREfile
#define soap_PUT__ns1__store_USCOREexec_USCOREfile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__store_USCOREexec_USCOREfile(soap, data), 0) || soap_put__ns1__store_USCOREexec_USCOREfile(soap, data, "ns1:store_exec_file", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__store_USCOREexec_USCOREfile
#define soap_PATCH__ns1__store_USCOREexec_USCOREfile(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__store_USCOREexec_USCOREfile(soap, data), 0) || soap_put__ns1__store_USCOREexec_USCOREfile(soap, data, "ns1:store_exec_file", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__store_USCOREexec_USCOREfile
#define soap_POST_send__ns1__store_USCOREexec_USCOREfile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__store_USCOREexec_USCOREfile(soap, data), 0) || soap_put__ns1__store_USCOREexec_USCOREfile(soap, data, "ns1:store_exec_file", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__store_USCOREexec_USCOREfile * SOAP_FMAC4 soap_get__ns1__store_USCOREexec_USCOREfile(struct soap*, struct _ns1__store_USCOREexec_USCOREfile *, const char*, const char*);

#ifndef soap_read__ns1__store_USCOREexec_USCOREfile
#define soap_read__ns1__store_USCOREexec_USCOREfile(soap, data) ( ((data) ? (soap_default__ns1__store_USCOREexec_USCOREfile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__store_USCOREexec_USCOREfile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__store_USCOREexec_USCOREfile
#define soap_GET__ns1__store_USCOREexec_USCOREfile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__store_USCOREexec_USCOREfile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__store_USCOREexec_USCOREfile
#define soap_POST_recv__ns1__store_USCOREexec_USCOREfile(soap, data) ( soap_read__ns1__store_USCOREexec_USCOREfile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__removeFileResponse_DEFINED
#define SOAP_TYPE__ns1__removeFileResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__removeFileResponse(struct soap*, struct _ns1__removeFileResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__removeFileResponse(struct soap*, const struct _ns1__removeFileResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__removeFileResponse(struct soap*, const char*, int, const struct _ns1__removeFileResponse *, const char*);
SOAP_FMAC3 struct _ns1__removeFileResponse * SOAP_FMAC4 soap_in__ns1__removeFileResponse(struct soap*, const char*, struct _ns1__removeFileResponse *, const char*);

SOAP_FMAC3 struct _ns1__removeFileResponse * SOAP_FMAC4 soap_new__ns1__removeFileResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__removeFileResponse(struct soap*, const struct _ns1__removeFileResponse *, const char*, const char*);

#ifndef soap_write__ns1__removeFileResponse
#define soap_write__ns1__removeFileResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__removeFileResponse(soap, data), 0) || soap_put__ns1__removeFileResponse(soap, data, "ns1:removeFileResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__removeFileResponse
#define soap_PUT__ns1__removeFileResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__removeFileResponse(soap, data), 0) || soap_put__ns1__removeFileResponse(soap, data, "ns1:removeFileResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__removeFileResponse
#define soap_PATCH__ns1__removeFileResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__removeFileResponse(soap, data), 0) || soap_put__ns1__removeFileResponse(soap, data, "ns1:removeFileResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__removeFileResponse
#define soap_POST_send__ns1__removeFileResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__removeFileResponse(soap, data), 0) || soap_put__ns1__removeFileResponse(soap, data, "ns1:removeFileResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__removeFileResponse * SOAP_FMAC4 soap_get__ns1__removeFileResponse(struct soap*, struct _ns1__removeFileResponse *, const char*, const char*);

#ifndef soap_read__ns1__removeFileResponse
#define soap_read__ns1__removeFileResponse(soap, data) ( ((data) ? (soap_default__ns1__removeFileResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__removeFileResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__removeFileResponse
#define soap_GET__ns1__removeFileResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__removeFileResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__removeFileResponse
#define soap_POST_recv__ns1__removeFileResponse(soap, data) ( soap_read__ns1__removeFileResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__removeFile_DEFINED
#define SOAP_TYPE__ns1__removeFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__removeFile(struct soap*, struct _ns1__removeFile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__removeFile(struct soap*, const struct _ns1__removeFile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__removeFile(struct soap*, const char*, int, const struct _ns1__removeFile *, const char*);
SOAP_FMAC3 struct _ns1__removeFile * SOAP_FMAC4 soap_in__ns1__removeFile(struct soap*, const char*, struct _ns1__removeFile *, const char*);

SOAP_FMAC3 struct _ns1__removeFile * SOAP_FMAC4 soap_new__ns1__removeFile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__removeFile(struct soap*, const struct _ns1__removeFile *, const char*, const char*);

#ifndef soap_write__ns1__removeFile
#define soap_write__ns1__removeFile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__removeFile(soap, data), 0) || soap_put__ns1__removeFile(soap, data, "ns1:removeFile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__removeFile
#define soap_PUT__ns1__removeFile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__removeFile(soap, data), 0) || soap_put__ns1__removeFile(soap, data, "ns1:removeFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__removeFile
#define soap_PATCH__ns1__removeFile(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__removeFile(soap, data), 0) || soap_put__ns1__removeFile(soap, data, "ns1:removeFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__removeFile
#define soap_POST_send__ns1__removeFile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__removeFile(soap, data), 0) || soap_put__ns1__removeFile(soap, data, "ns1:removeFile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__removeFile * SOAP_FMAC4 soap_get__ns1__removeFile(struct soap*, struct _ns1__removeFile *, const char*, const char*);

#ifndef soap_read__ns1__removeFile
#define soap_read__ns1__removeFile(soap, data) ( ((data) ? (soap_default__ns1__removeFile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__removeFile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__removeFile
#define soap_GET__ns1__removeFile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__removeFile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__removeFile
#define soap_POST_recv__ns1__removeFile(soap, data) ( soap_read__ns1__removeFile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__modifyFileResponse_DEFINED
#define SOAP_TYPE__ns1__modifyFileResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__modifyFileResponse(struct soap*, struct _ns1__modifyFileResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__modifyFileResponse(struct soap*, const struct _ns1__modifyFileResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__modifyFileResponse(struct soap*, const char*, int, const struct _ns1__modifyFileResponse *, const char*);
SOAP_FMAC3 struct _ns1__modifyFileResponse * SOAP_FMAC4 soap_in__ns1__modifyFileResponse(struct soap*, const char*, struct _ns1__modifyFileResponse *, const char*);

SOAP_FMAC3 struct _ns1__modifyFileResponse * SOAP_FMAC4 soap_new__ns1__modifyFileResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__modifyFileResponse(struct soap*, const struct _ns1__modifyFileResponse *, const char*, const char*);

#ifndef soap_write__ns1__modifyFileResponse
#define soap_write__ns1__modifyFileResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__modifyFileResponse(soap, data), 0) || soap_put__ns1__modifyFileResponse(soap, data, "ns1:modifyFileResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__modifyFileResponse
#define soap_PUT__ns1__modifyFileResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__modifyFileResponse(soap, data), 0) || soap_put__ns1__modifyFileResponse(soap, data, "ns1:modifyFileResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__modifyFileResponse
#define soap_PATCH__ns1__modifyFileResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__modifyFileResponse(soap, data), 0) || soap_put__ns1__modifyFileResponse(soap, data, "ns1:modifyFileResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__modifyFileResponse
#define soap_POST_send__ns1__modifyFileResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__modifyFileResponse(soap, data), 0) || soap_put__ns1__modifyFileResponse(soap, data, "ns1:modifyFileResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__modifyFileResponse * SOAP_FMAC4 soap_get__ns1__modifyFileResponse(struct soap*, struct _ns1__modifyFileResponse *, const char*, const char*);

#ifndef soap_read__ns1__modifyFileResponse
#define soap_read__ns1__modifyFileResponse(soap, data) ( ((data) ? (soap_default__ns1__modifyFileResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__modifyFileResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__modifyFileResponse
#define soap_GET__ns1__modifyFileResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__modifyFileResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__modifyFileResponse
#define soap_POST_recv__ns1__modifyFileResponse(soap, data) ( soap_read__ns1__modifyFileResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__modifyFile_DEFINED
#define SOAP_TYPE__ns1__modifyFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__modifyFile(struct soap*, struct _ns1__modifyFile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__modifyFile(struct soap*, const struct _ns1__modifyFile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__modifyFile(struct soap*, const char*, int, const struct _ns1__modifyFile *, const char*);
SOAP_FMAC3 struct _ns1__modifyFile * SOAP_FMAC4 soap_in__ns1__modifyFile(struct soap*, const char*, struct _ns1__modifyFile *, const char*);

SOAP_FMAC3 struct _ns1__modifyFile * SOAP_FMAC4 soap_new__ns1__modifyFile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__modifyFile(struct soap*, const struct _ns1__modifyFile *, const char*, const char*);

#ifndef soap_write__ns1__modifyFile
#define soap_write__ns1__modifyFile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__modifyFile(soap, data), 0) || soap_put__ns1__modifyFile(soap, data, "ns1:modifyFile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__modifyFile
#define soap_PUT__ns1__modifyFile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__modifyFile(soap, data), 0) || soap_put__ns1__modifyFile(soap, data, "ns1:modifyFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__modifyFile
#define soap_PATCH__ns1__modifyFile(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__modifyFile(soap, data), 0) || soap_put__ns1__modifyFile(soap, data, "ns1:modifyFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__modifyFile
#define soap_POST_send__ns1__modifyFile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__modifyFile(soap, data), 0) || soap_put__ns1__modifyFile(soap, data, "ns1:modifyFile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__modifyFile * SOAP_FMAC4 soap_get__ns1__modifyFile(struct soap*, struct _ns1__modifyFile *, const char*, const char*);

#ifndef soap_read__ns1__modifyFile
#define soap_read__ns1__modifyFile(soap, data) ( ((data) ? (soap_default__ns1__modifyFile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__modifyFile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__modifyFile
#define soap_GET__ns1__modifyFile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__modifyFile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__modifyFile
#define soap_POST_recv__ns1__modifyFile(soap, data) ( soap_read__ns1__modifyFile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__createFileResponse_DEFINED
#define SOAP_TYPE__ns1__createFileResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__createFileResponse(struct soap*, struct _ns1__createFileResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__createFileResponse(struct soap*, const struct _ns1__createFileResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__createFileResponse(struct soap*, const char*, int, const struct _ns1__createFileResponse *, const char*);
SOAP_FMAC3 struct _ns1__createFileResponse * SOAP_FMAC4 soap_in__ns1__createFileResponse(struct soap*, const char*, struct _ns1__createFileResponse *, const char*);

SOAP_FMAC3 struct _ns1__createFileResponse * SOAP_FMAC4 soap_new__ns1__createFileResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__createFileResponse(struct soap*, const struct _ns1__createFileResponse *, const char*, const char*);

#ifndef soap_write__ns1__createFileResponse
#define soap_write__ns1__createFileResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__createFileResponse(soap, data), 0) || soap_put__ns1__createFileResponse(soap, data, "ns1:createFileResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__createFileResponse
#define soap_PUT__ns1__createFileResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__createFileResponse(soap, data), 0) || soap_put__ns1__createFileResponse(soap, data, "ns1:createFileResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__createFileResponse
#define soap_PATCH__ns1__createFileResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__createFileResponse(soap, data), 0) || soap_put__ns1__createFileResponse(soap, data, "ns1:createFileResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__createFileResponse
#define soap_POST_send__ns1__createFileResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__createFileResponse(soap, data), 0) || soap_put__ns1__createFileResponse(soap, data, "ns1:createFileResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__createFileResponse * SOAP_FMAC4 soap_get__ns1__createFileResponse(struct soap*, struct _ns1__createFileResponse *, const char*, const char*);

#ifndef soap_read__ns1__createFileResponse
#define soap_read__ns1__createFileResponse(soap, data) ( ((data) ? (soap_default__ns1__createFileResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__createFileResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__createFileResponse
#define soap_GET__ns1__createFileResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__createFileResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__createFileResponse
#define soap_POST_recv__ns1__createFileResponse(soap, data) ( soap_read__ns1__createFileResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__createFile_DEFINED
#define SOAP_TYPE__ns1__createFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__createFile(struct soap*, struct _ns1__createFile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__createFile(struct soap*, const struct _ns1__createFile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__createFile(struct soap*, const char*, int, const struct _ns1__createFile *, const char*);
SOAP_FMAC3 struct _ns1__createFile * SOAP_FMAC4 soap_in__ns1__createFile(struct soap*, const char*, struct _ns1__createFile *, const char*);

SOAP_FMAC3 struct _ns1__createFile * SOAP_FMAC4 soap_new__ns1__createFile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__createFile(struct soap*, const struct _ns1__createFile *, const char*, const char*);

#ifndef soap_write__ns1__createFile
#define soap_write__ns1__createFile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__createFile(soap, data), 0) || soap_put__ns1__createFile(soap, data, "ns1:createFile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__createFile
#define soap_PUT__ns1__createFile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__createFile(soap, data), 0) || soap_put__ns1__createFile(soap, data, "ns1:createFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__createFile
#define soap_PATCH__ns1__createFile(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__createFile(soap, data), 0) || soap_put__ns1__createFile(soap, data, "ns1:createFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__createFile
#define soap_POST_send__ns1__createFile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__createFile(soap, data), 0) || soap_put__ns1__createFile(soap, data, "ns1:createFile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__createFile * SOAP_FMAC4 soap_get__ns1__createFile(struct soap*, struct _ns1__createFile *, const char*, const char*);

#ifndef soap_read__ns1__createFile
#define soap_read__ns1__createFile(soap, data) ( ((data) ? (soap_default__ns1__createFile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__createFile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__createFile
#define soap_GET__ns1__createFile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__createFile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__createFile
#define soap_POST_recv__ns1__createFile(soap, data) ( soap_read__ns1__createFile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__storeFileResponse_DEFINED
#define SOAP_TYPE__ns1__storeFileResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__storeFileResponse(struct soap*, struct _ns1__storeFileResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__storeFileResponse(struct soap*, const struct _ns1__storeFileResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__storeFileResponse(struct soap*, const char*, int, const struct _ns1__storeFileResponse *, const char*);
SOAP_FMAC3 struct _ns1__storeFileResponse * SOAP_FMAC4 soap_in__ns1__storeFileResponse(struct soap*, const char*, struct _ns1__storeFileResponse *, const char*);

SOAP_FMAC3 struct _ns1__storeFileResponse * SOAP_FMAC4 soap_new__ns1__storeFileResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__storeFileResponse(struct soap*, const struct _ns1__storeFileResponse *, const char*, const char*);

#ifndef soap_write__ns1__storeFileResponse
#define soap_write__ns1__storeFileResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__storeFileResponse(soap, data), 0) || soap_put__ns1__storeFileResponse(soap, data, "ns1:storeFileResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__storeFileResponse
#define soap_PUT__ns1__storeFileResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__storeFileResponse(soap, data), 0) || soap_put__ns1__storeFileResponse(soap, data, "ns1:storeFileResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__storeFileResponse
#define soap_PATCH__ns1__storeFileResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__storeFileResponse(soap, data), 0) || soap_put__ns1__storeFileResponse(soap, data, "ns1:storeFileResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__storeFileResponse
#define soap_POST_send__ns1__storeFileResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__storeFileResponse(soap, data), 0) || soap_put__ns1__storeFileResponse(soap, data, "ns1:storeFileResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__storeFileResponse * SOAP_FMAC4 soap_get__ns1__storeFileResponse(struct soap*, struct _ns1__storeFileResponse *, const char*, const char*);

#ifndef soap_read__ns1__storeFileResponse
#define soap_read__ns1__storeFileResponse(soap, data) ( ((data) ? (soap_default__ns1__storeFileResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__storeFileResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__storeFileResponse
#define soap_GET__ns1__storeFileResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__storeFileResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__storeFileResponse
#define soap_POST_recv__ns1__storeFileResponse(soap, data) ( soap_read__ns1__storeFileResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__storeFile_DEFINED
#define SOAP_TYPE__ns1__storeFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__storeFile(struct soap*, struct _ns1__storeFile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__storeFile(struct soap*, const struct _ns1__storeFile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__storeFile(struct soap*, const char*, int, const struct _ns1__storeFile *, const char*);
SOAP_FMAC3 struct _ns1__storeFile * SOAP_FMAC4 soap_in__ns1__storeFile(struct soap*, const char*, struct _ns1__storeFile *, const char*);

SOAP_FMAC3 struct _ns1__storeFile * SOAP_FMAC4 soap_new__ns1__storeFile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__storeFile(struct soap*, const struct _ns1__storeFile *, const char*, const char*);

#ifndef soap_write__ns1__storeFile
#define soap_write__ns1__storeFile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__storeFile(soap, data), 0) || soap_put__ns1__storeFile(soap, data, "ns1:storeFile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__storeFile
#define soap_PUT__ns1__storeFile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__storeFile(soap, data), 0) || soap_put__ns1__storeFile(soap, data, "ns1:storeFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ns1__storeFile
#define soap_PATCH__ns1__storeFile(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__storeFile(soap, data), 0) || soap_put__ns1__storeFile(soap, data, "ns1:storeFile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ns1__storeFile
#define soap_POST_send__ns1__storeFile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ns1__storeFile(soap, data), 0) || soap_put__ns1__storeFile(soap, data, "ns1:storeFile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__storeFile * SOAP_FMAC4 soap_get__ns1__storeFile(struct soap*, struct _ns1__storeFile *, const char*, const char*);

#ifndef soap_read__ns1__storeFile
#define soap_read__ns1__storeFile(soap, data) ( ((data) ? (soap_default__ns1__storeFile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__storeFile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__storeFile
#define soap_GET__ns1__storeFile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__storeFile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__ns1__storeFile
#define soap_POST_recv__ns1__storeFile(soap, data) ( soap_read__ns1__storeFile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
#endif

#endif

#ifndef SOAP_TYPE_PointerTo_ns1__totalServFilesSizeResponse1_DEFINED
#define SOAP_TYPE_PointerTo_ns1__totalServFilesSizeResponse1_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__totalServFilesSizeResponse1(struct soap*, struct _ns1__totalServFilesSizeResponse1 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__totalServFilesSizeResponse1(struct soap*, const char *, int, struct _ns1__totalServFilesSizeResponse1 *const*, const char *);
SOAP_FMAC3 struct _ns1__totalServFilesSizeResponse1 ** SOAP_FMAC4 soap_in_PointerTo_ns1__totalServFilesSizeResponse1(struct soap*, const char*, struct _ns1__totalServFilesSizeResponse1 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__totalServFilesSizeResponse1(struct soap*, struct _ns1__totalServFilesSizeResponse1 *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__totalServFilesSizeResponse1 ** SOAP_FMAC4 soap_get_PointerTo_ns1__totalServFilesSizeResponse1(struct soap*, struct _ns1__totalServFilesSizeResponse1 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__totalServFilesSize_DEFINED
#define SOAP_TYPE_PointerTo_ns1__totalServFilesSize_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__totalServFilesSize(struct soap*, struct _ns1__totalServFilesSize *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__totalServFilesSize(struct soap*, const char *, int, struct _ns1__totalServFilesSize *const*, const char *);
SOAP_FMAC3 struct _ns1__totalServFilesSize ** SOAP_FMAC4 soap_in_PointerTo_ns1__totalServFilesSize(struct soap*, const char*, struct _ns1__totalServFilesSize **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__totalServFilesSize(struct soap*, struct _ns1__totalServFilesSize *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__totalServFilesSize ** SOAP_FMAC4 soap_get_PointerTo_ns1__totalServFilesSize(struct soap*, struct _ns1__totalServFilesSize **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__filesStatisticsResponse1_DEFINED
#define SOAP_TYPE_PointerTo_ns1__filesStatisticsResponse1_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__filesStatisticsResponse1(struct soap*, struct _ns1__filesStatisticsResponse1 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__filesStatisticsResponse1(struct soap*, const char *, int, struct _ns1__filesStatisticsResponse1 *const*, const char *);
SOAP_FMAC3 struct _ns1__filesStatisticsResponse1 ** SOAP_FMAC4 soap_in_PointerTo_ns1__filesStatisticsResponse1(struct soap*, const char*, struct _ns1__filesStatisticsResponse1 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__filesStatisticsResponse1(struct soap*, struct _ns1__filesStatisticsResponse1 *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__filesStatisticsResponse1 ** SOAP_FMAC4 soap_get_PointerTo_ns1__filesStatisticsResponse1(struct soap*, struct _ns1__filesStatisticsResponse1 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__filesStatistics_DEFINED
#define SOAP_TYPE_PointerTo_ns1__filesStatistics_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__filesStatistics(struct soap*, struct _ns1__filesStatistics *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__filesStatistics(struct soap*, const char *, int, struct _ns1__filesStatistics *const*, const char *);
SOAP_FMAC3 struct _ns1__filesStatistics ** SOAP_FMAC4 soap_in_PointerTo_ns1__filesStatistics(struct soap*, const char*, struct _ns1__filesStatistics **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__filesStatistics(struct soap*, struct _ns1__filesStatistics *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__filesStatistics ** SOAP_FMAC4 soap_get_PointerTo_ns1__filesStatistics(struct soap*, struct _ns1__filesStatistics **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__smallestServFileResponse1_DEFINED
#define SOAP_TYPE_PointerTo_ns1__smallestServFileResponse1_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__smallestServFileResponse1(struct soap*, struct _ns1__smallestServFileResponse1 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__smallestServFileResponse1(struct soap*, const char *, int, struct _ns1__smallestServFileResponse1 *const*, const char *);
SOAP_FMAC3 struct _ns1__smallestServFileResponse1 ** SOAP_FMAC4 soap_in_PointerTo_ns1__smallestServFileResponse1(struct soap*, const char*, struct _ns1__smallestServFileResponse1 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__smallestServFileResponse1(struct soap*, struct _ns1__smallestServFileResponse1 *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__smallestServFileResponse1 ** SOAP_FMAC4 soap_get_PointerTo_ns1__smallestServFileResponse1(struct soap*, struct _ns1__smallestServFileResponse1 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__smallestServFile_DEFINED
#define SOAP_TYPE_PointerTo_ns1__smallestServFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__smallestServFile(struct soap*, struct _ns1__smallestServFile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__smallestServFile(struct soap*, const char *, int, struct _ns1__smallestServFile *const*, const char *);
SOAP_FMAC3 struct _ns1__smallestServFile ** SOAP_FMAC4 soap_in_PointerTo_ns1__smallestServFile(struct soap*, const char*, struct _ns1__smallestServFile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__smallestServFile(struct soap*, struct _ns1__smallestServFile *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__smallestServFile ** SOAP_FMAC4 soap_get_PointerTo_ns1__smallestServFile(struct soap*, struct _ns1__smallestServFile **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__largestServFileResponse1_DEFINED
#define SOAP_TYPE_PointerTo_ns1__largestServFileResponse1_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__largestServFileResponse1(struct soap*, struct _ns1__largestServFileResponse1 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__largestServFileResponse1(struct soap*, const char *, int, struct _ns1__largestServFileResponse1 *const*, const char *);
SOAP_FMAC3 struct _ns1__largestServFileResponse1 ** SOAP_FMAC4 soap_in_PointerTo_ns1__largestServFileResponse1(struct soap*, const char*, struct _ns1__largestServFileResponse1 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__largestServFileResponse1(struct soap*, struct _ns1__largestServFileResponse1 *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__largestServFileResponse1 ** SOAP_FMAC4 soap_get_PointerTo_ns1__largestServFileResponse1(struct soap*, struct _ns1__largestServFileResponse1 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__largestServFile_DEFINED
#define SOAP_TYPE_PointerTo_ns1__largestServFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__largestServFile(struct soap*, struct _ns1__largestServFile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__largestServFile(struct soap*, const char *, int, struct _ns1__largestServFile *const*, const char *);
SOAP_FMAC3 struct _ns1__largestServFile ** SOAP_FMAC4 soap_in_PointerTo_ns1__largestServFile(struct soap*, const char*, struct _ns1__largestServFile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__largestServFile(struct soap*, struct _ns1__largestServFile *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__largestServFile ** SOAP_FMAC4 soap_get_PointerTo_ns1__largestServFile(struct soap*, struct _ns1__largestServFile **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__filesInCertainProgLanguageResponse1_DEFINED
#define SOAP_TYPE_PointerTo_ns1__filesInCertainProgLanguageResponse1_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__filesInCertainProgLanguageResponse1(struct soap*, struct _ns1__filesInCertainProgLanguageResponse1 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__filesInCertainProgLanguageResponse1(struct soap*, const char *, int, struct _ns1__filesInCertainProgLanguageResponse1 *const*, const char *);
SOAP_FMAC3 struct _ns1__filesInCertainProgLanguageResponse1 ** SOAP_FMAC4 soap_in_PointerTo_ns1__filesInCertainProgLanguageResponse1(struct soap*, const char*, struct _ns1__filesInCertainProgLanguageResponse1 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__filesInCertainProgLanguageResponse1(struct soap*, struct _ns1__filesInCertainProgLanguageResponse1 *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__filesInCertainProgLanguageResponse1 ** SOAP_FMAC4 soap_get_PointerTo_ns1__filesInCertainProgLanguageResponse1(struct soap*, struct _ns1__filesInCertainProgLanguageResponse1 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__filesInCertainProgLanguage_DEFINED
#define SOAP_TYPE_PointerTo_ns1__filesInCertainProgLanguage_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__filesInCertainProgLanguage(struct soap*, struct _ns1__filesInCertainProgLanguage *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__filesInCertainProgLanguage(struct soap*, const char *, int, struct _ns1__filesInCertainProgLanguage *const*, const char *);
SOAP_FMAC3 struct _ns1__filesInCertainProgLanguage ** SOAP_FMAC4 soap_in_PointerTo_ns1__filesInCertainProgLanguage(struct soap*, const char*, struct _ns1__filesInCertainProgLanguage **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__filesInCertainProgLanguage(struct soap*, struct _ns1__filesInCertainProgLanguage *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__filesInCertainProgLanguage ** SOAP_FMAC4 soap_get_PointerTo_ns1__filesInCertainProgLanguage(struct soap*, struct _ns1__filesInCertainProgLanguage **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__servFilesResponse1_DEFINED
#define SOAP_TYPE_PointerTo_ns1__servFilesResponse1_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__servFilesResponse1(struct soap*, struct _ns1__servFilesResponse1 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__servFilesResponse1(struct soap*, const char *, int, struct _ns1__servFilesResponse1 *const*, const char *);
SOAP_FMAC3 struct _ns1__servFilesResponse1 ** SOAP_FMAC4 soap_in_PointerTo_ns1__servFilesResponse1(struct soap*, const char*, struct _ns1__servFilesResponse1 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__servFilesResponse1(struct soap*, struct _ns1__servFilesResponse1 *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__servFilesResponse1 ** SOAP_FMAC4 soap_get_PointerTo_ns1__servFilesResponse1(struct soap*, struct _ns1__servFilesResponse1 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__servFiles_DEFINED
#define SOAP_TYPE_PointerTo_ns1__servFiles_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__servFiles(struct soap*, struct _ns1__servFiles *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__servFiles(struct soap*, const char *, int, struct _ns1__servFiles *const*, const char *);
SOAP_FMAC3 struct _ns1__servFiles ** SOAP_FMAC4 soap_in_PointerTo_ns1__servFiles(struct soap*, const char*, struct _ns1__servFiles **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__servFiles(struct soap*, struct _ns1__servFiles *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__servFiles ** SOAP_FMAC4 soap_get_PointerTo_ns1__servFiles(struct soap*, struct _ns1__servFiles **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__clientLogFilesResponse1_DEFINED
#define SOAP_TYPE_PointerTo_ns1__clientLogFilesResponse1_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__clientLogFilesResponse1(struct soap*, struct _ns1__clientLogFilesResponse1 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__clientLogFilesResponse1(struct soap*, const char *, int, struct _ns1__clientLogFilesResponse1 *const*, const char *);
SOAP_FMAC3 struct _ns1__clientLogFilesResponse1 ** SOAP_FMAC4 soap_in_PointerTo_ns1__clientLogFilesResponse1(struct soap*, const char*, struct _ns1__clientLogFilesResponse1 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__clientLogFilesResponse1(struct soap*, struct _ns1__clientLogFilesResponse1 *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__clientLogFilesResponse1 ** SOAP_FMAC4 soap_get_PointerTo_ns1__clientLogFilesResponse1(struct soap*, struct _ns1__clientLogFilesResponse1 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__clientLogFiles_DEFINED
#define SOAP_TYPE_PointerTo_ns1__clientLogFiles_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__clientLogFiles(struct soap*, struct _ns1__clientLogFiles *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__clientLogFiles(struct soap*, const char *, int, struct _ns1__clientLogFiles *const*, const char *);
SOAP_FMAC3 struct _ns1__clientLogFiles ** SOAP_FMAC4 soap_in_PointerTo_ns1__clientLogFiles(struct soap*, const char*, struct _ns1__clientLogFiles **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__clientLogFiles(struct soap*, struct _ns1__clientLogFiles *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__clientLogFiles ** SOAP_FMAC4 soap_get_PointerTo_ns1__clientLogFiles(struct soap*, struct _ns1__clientLogFiles **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__removeFileResponse_DEFINED
#define SOAP_TYPE_PointerTo_ns1__removeFileResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__removeFileResponse(struct soap*, struct _ns1__removeFileResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__removeFileResponse(struct soap*, const char *, int, struct _ns1__removeFileResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__removeFileResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__removeFileResponse(struct soap*, const char*, struct _ns1__removeFileResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__removeFileResponse(struct soap*, struct _ns1__removeFileResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__removeFileResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__removeFileResponse(struct soap*, struct _ns1__removeFileResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__removeFile_DEFINED
#define SOAP_TYPE_PointerTo_ns1__removeFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__removeFile(struct soap*, struct _ns1__removeFile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__removeFile(struct soap*, const char *, int, struct _ns1__removeFile *const*, const char *);
SOAP_FMAC3 struct _ns1__removeFile ** SOAP_FMAC4 soap_in_PointerTo_ns1__removeFile(struct soap*, const char*, struct _ns1__removeFile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__removeFile(struct soap*, struct _ns1__removeFile *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__removeFile ** SOAP_FMAC4 soap_get_PointerTo_ns1__removeFile(struct soap*, struct _ns1__removeFile **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__modifyFileResponse_DEFINED
#define SOAP_TYPE_PointerTo_ns1__modifyFileResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__modifyFileResponse(struct soap*, struct _ns1__modifyFileResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__modifyFileResponse(struct soap*, const char *, int, struct _ns1__modifyFileResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__modifyFileResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__modifyFileResponse(struct soap*, const char*, struct _ns1__modifyFileResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__modifyFileResponse(struct soap*, struct _ns1__modifyFileResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__modifyFileResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__modifyFileResponse(struct soap*, struct _ns1__modifyFileResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__modifyFile_DEFINED
#define SOAP_TYPE_PointerTo_ns1__modifyFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__modifyFile(struct soap*, struct _ns1__modifyFile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__modifyFile(struct soap*, const char *, int, struct _ns1__modifyFile *const*, const char *);
SOAP_FMAC3 struct _ns1__modifyFile ** SOAP_FMAC4 soap_in_PointerTo_ns1__modifyFile(struct soap*, const char*, struct _ns1__modifyFile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__modifyFile(struct soap*, struct _ns1__modifyFile *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__modifyFile ** SOAP_FMAC4 soap_get_PointerTo_ns1__modifyFile(struct soap*, struct _ns1__modifyFile **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__createFileResponse_DEFINED
#define SOAP_TYPE_PointerTo_ns1__createFileResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__createFileResponse(struct soap*, struct _ns1__createFileResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__createFileResponse(struct soap*, const char *, int, struct _ns1__createFileResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__createFileResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__createFileResponse(struct soap*, const char*, struct _ns1__createFileResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__createFileResponse(struct soap*, struct _ns1__createFileResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__createFileResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__createFileResponse(struct soap*, struct _ns1__createFileResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__createFile_DEFINED
#define SOAP_TYPE_PointerTo_ns1__createFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__createFile(struct soap*, struct _ns1__createFile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__createFile(struct soap*, const char *, int, struct _ns1__createFile *const*, const char *);
SOAP_FMAC3 struct _ns1__createFile ** SOAP_FMAC4 soap_in_PointerTo_ns1__createFile(struct soap*, const char*, struct _ns1__createFile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__createFile(struct soap*, struct _ns1__createFile *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__createFile ** SOAP_FMAC4 soap_get_PointerTo_ns1__createFile(struct soap*, struct _ns1__createFile **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__storeFileResponse_DEFINED
#define SOAP_TYPE_PointerTo_ns1__storeFileResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__storeFileResponse(struct soap*, struct _ns1__storeFileResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__storeFileResponse(struct soap*, const char *, int, struct _ns1__storeFileResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__storeFileResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__storeFileResponse(struct soap*, const char*, struct _ns1__storeFileResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__storeFileResponse(struct soap*, struct _ns1__storeFileResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__storeFileResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__storeFileResponse(struct soap*, struct _ns1__storeFileResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__storeFile_DEFINED
#define SOAP_TYPE_PointerTo_ns1__storeFile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__storeFile(struct soap*, struct _ns1__storeFile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__storeFile(struct soap*, const char *, int, struct _ns1__storeFile *const*, const char *);
SOAP_FMAC3 struct _ns1__storeFile ** SOAP_FMAC4 soap_in_PointerTo_ns1__storeFile(struct soap*, const char*, struct _ns1__storeFile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__storeFile(struct soap*, struct _ns1__storeFile *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__storeFile ** SOAP_FMAC4 soap_get_PointerTo_ns1__storeFile(struct soap*, struct _ns1__storeFile **, const char*, const char*);
#endif

#ifndef SOAP_TYPE__QName_DEFINED
#define SOAP_TYPE__QName_DEFINED

#ifdef SOAP_DEFAULT__QName
#define soap_default__QName(soap, a) (*(a) = SOAP_DEFAULT__QName)
#else
#define soap_default__QName(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);

#define soap__QName2s(soap, a) soap_QName2s(soap, (a))
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2_QName(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
#define soap_new__QName soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__QName
#define soap_PUT__QName(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__QName
#define soap_PATCH__QName(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__QName
#define soap_POST_send__QName(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__QName
#define soap_GET__QName(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__QName(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__QName
#define soap_POST_recv__QName(soap, data) ( soap_read__QName(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__XML_DEFINED
#define SOAP_TYPE__XML_DEFINED
#endif

#ifndef SOAP_TYPE_string_DEFINED
#define SOAP_TYPE_string_DEFINED

#ifdef SOAP_DEFAULT_string
#define soap_default_string(soap, a) (*(a) = SOAP_DEFAULT_string)
#else
#define soap_default_string(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);

#define soap_string2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2string(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

SOAP_FMAC3 char * * SOAP_FMAC4 soap_new_string(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_string(soap, data, "string", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_string
#define soap_PUT_string(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_string
#define soap_PATCH_string(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_string
#define soap_POST_send_string(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_string
#define soap_GET_string(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_string(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_string
#define soap_POST_recv_string(soap, data) ( soap_read_string(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

/* End of soapH.h */
